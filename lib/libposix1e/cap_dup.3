.\"-
.\" Copyright (c) 2000 Robert N. M. Watson
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"       $FreeBSD$
.\"
.\" TrustedBSD Project - support for POSIX.1e process capabilities 
.\"
.Dd April 1, 2000
.Dt CAP_DUP 3
.Os FreeBSD 5.0
.Sh NAME
.Nm cap_dup
.Nd Duplicate a Capability State in Working Storage
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/capability.h>
.Ft cap_t
.Fn cap_dup "cap_t cap_p"
.Sh DESCRIPTION
The
.Fn cap_dup
function returns a duplicate capability state in working storage given the
source object
.Ar cap_p ,
allocating any memory necessary, and returning a pointer to the newly
created capability state.
Once duplicated, no operations on the either capability state shall affect
the other in any way.
.Pp
This function may cause memory to be allocated.
The caller should free any releasable memory, when the capability state in
working storage is no longer required, by calling
.Vn cap_free
with the cap_t as an argument.
.Sh IMPLEMENTATION NOTES
FreeBSD's support for POSIX.1e interfaces and features is still under
development at this time.
.Sh RETURN VALUES
Upon successful completion, the
.Fn cap_dup
function returns a pointer to the newly created capability state in working
storage.
Otherwise, a value of
.Va (cap_t)NULL
shall be returned and
.Va errno
shall be set to indicate the error.
.Sh ERRORS
If any of the following conditions occur, the
.Fn cap_dup
function shall return
.Va (cap_t)NULL
and set
.Va errno
to the corresponding value:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of the
.Va cap_p
argument does not refer to a capability state in the working storage.
.It Bq Er ENOMEM
The capability state to be returned requires more memory than is allowed by
the hardware or system-imposed memory management constraints.
.El
.Sh SEE ALSO
.Xr cap 3 ,
.Xr cap_free 3 ,
.Xr posix1e 3
.Sh STANDARDS
POSIX.1e is described in IEEE POSIX.1e draft 17.  Discussion
of the draft continues on the cross-platform POSIX.1e implementation
mailing list.  To join this list, see the
.Fx
POSIX.1e implementation
page for more information.
.Sh HISTORY
Support for POSIX.1e Capabilities was developed as part of the TrustedBSD
Project.
POSIX.1e Capability support was introduced in
.Fx 5.0 ,
and development continues.
.Sh AUTHORS
.An Robert N M Watson
.Sh BUGS
These features are not yet fully implemented.
