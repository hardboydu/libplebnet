.\" Copyright (c) 1994, Henrik Vestergaard Draboel
.\" All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\" 	This product includes software developed by Henrik Vestergaard Draboel..
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" 
.\" $Id: rtprio.2,v 1.1 1994/09/01 09:52:37 davidg Exp $
.\"
.Dd July 23, 1994
.Dt RTPRIO 2
.Os FreeBSD 1.1.5.1
.Sh NAME
.Nm rtprio
.Nd examine or modify a process realtime scheduling priority
.Sh SYNOPSIS
.Fd #include <sys/resource.h>
.Ft int 
.Fn rtprio "pid_t pid" "int prio"
.Sh DESCRIPTION
Rtprio() is used to change or read the realtime priority of a process.

.Fa pid
specifies the process to be used. If it is 0, the current process will
be used.

.Fa prio
specifies the new priority of the process, or 
.Dv RTPRIO_RTOFF , 
for normal
(non-realtime) priority or 
.Dv RTPRIO_NOCHG
for nochange (se RETURN VALUE).

Legal values of priorities are between 
.Dv RTPRIO_RTMIN (0)
and  
.Dv RTPRIO_RTMAX (31) .
0 is the highest possible priority.

Realtime priority is enherited through fork() and exec().

A realtime process can only be preempted by a process of equal or
higher priority, or an interrupt. Processes of equal realtime priority
are run in a round-robin schedule.
.Sh RETURN VALUES
If errno is not set, the new (or unchanged) realtime priority of the
process is returned.
.Sh ERRORS
.Fn Rtprio
will fail if 
.Bl -tag -width Er
.It Bq Er EINVAL
The specified
.Fa prio
was out of range.
.It Bq Er EPERM
The calling process is not allowed to set the realtime priority. Only
root is allowed to change the realtime priority of any process.
.It Bq Er ESRCH
The specified process was not found.
.Sh AUTHOR
Henrik Vestergaard Draboel - hvd@terry.ping.dk
.Sh SEE ALSO
.Xr rtprio 1 ,
.Xr nice 1 ,
.Xr ps 1 ,
.Xr nice 2 ,
.Xr renice 8

