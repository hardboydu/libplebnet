.\" Copyright (c) 2003 Mike Barcroft <mike@FreeBSD.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD$
.\"
.Dd February 8, 2003
.Dt FPCLASSIFY 3
.Os
.Sh NAME
.Nm fpclassify
.Nd "classify a floating-point number"
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In math.h
.Ft int
.Fn fpclassify "real-floating x"
.Sh DESCRIPTION
The
.Fn fpclassify
macro takes an argument of
.Va x
and returns one of the following manifest constants.
.Bl -tag -width ".Dv FP_SUBNORMAL"
.It Dv FP_INFINITE
Indicates that
.Va x
is an infinite number.
.It Dv FP_NAN
Indicates that
.Va x
is not a number (NaN).
.It Dv FP_NORMAL
Indicates that
.Va x
is a normalized number.
.It Dv FP_SUBNORMAL
Indicates that
.Va x
is a denormalized number.
.It Dv FP_ZERO
Indicates that
.Va x
is zero (0 or -0).
.El
.Sh SEE ALSO
.Xr math 3
.Sh STANDARDS
The
.Fn fpclassify
macro conforms to
.St -isoC-99 .
.Sh HISTORY
The
.Fn fpclassify
macro was added in
.Fx 5.1 .
.Sh BUGS
By default, the DEC Alpha architecture does not support IEEE rounding.
See compiler documentation for additional details.
