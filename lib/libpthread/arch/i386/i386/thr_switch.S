/*
 * Copyright (c) 2002 Jonathan Mini <mini@freebsd.org>.
 * Copyright (c) 2001 Daniel Eischen <deischen@freebsd.org>.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Neither the name of the author nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY DANIEL EISCHEN AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <machine/asm.h>
__FBSDID("$FreeBSD$");

/*
 * Where do we define these?
 */
#define	MC_SIZE			640	/* sizeof mcontext_t */
#define	UC_MC_OFFSET		16	/* offset to mcontext from ucontext */
#define	UC_MC_LEN_OFFSET	96	/* offset to mc_len from mcontext */
#define	MC_FPREGS_OFFSET	96	/* offset to FP regs from mcontext */
#define	MC_FP_CW_OFFSET		96	/* offset to FP control word */
#define	MC_FPFMT_OFFSET		84	/* offset to mc_fpformat from mcontext */
#define MC_FPFMT_NODEV		0x10000
#define MC_FPFMT_387		0x10001
#define	MC_FPFMT_XMM		0x10002
#define	MC_OWNEDFP_OFFSET	88	/* offset to mc_ownedfp from mcontext */
#define	MC_OWNEDFP_NONE 	0x20000
#define	MC_OWNEDFP_FPU  	0x20001
#define	MC_OWNEDFP_PCB  	0x20002


/*
 * int _thread_switch(kse_thr_mailbox *td, thread_mailbox **curthreadp);
 *
 * Does not return on success, returns -1 otherwise.
 */
ENTRY(_thread_switch)
	movl	4(%esp), %edx		/* get address of thread_mailbox */
					/* .. ucontext_t is at offset 0 */
	cmpl	$0, %edx		/* check for null pointer */
	jne	1f
	movl	$-1, %eax
	jmp	9f
1:	cmpl	$MC_SIZE, UC_MC_LEN_OFFSET(%edx) /* is context valid? */
	je	2f
	movl	$-1, %eax		/* bzzzt, invalid context */
	jmp	9f
2:	movl	8(%esp), %ecx		/* get address of curthreadp */
	movl	%edx, %ebx		/* save the pointer for later */
	/*
	 * From here on, we don't touch the old stack.
	 */
	addl	$UC_MC_OFFSET, %edx	/* add offset to mcontext */
	/*movl	4(%edx), %gs*/		/* we don't touch %gs */
	movl	8(%edx), %fs
	movl	12(%edx), %es
	movl	16(%edx), %ds
	movl	76(%edx), %ss
	movl	20(%edx), %edi
	movl	24(%edx), %esi
	movl	28(%edx), %ebp
	movl	72(%edx), %esp		/* switch to context defined stack */
	subl	$4, %esp		/* leave space for the return address */
	movl	60(%edx), %eax		/* put return address at top of stack */
	movl	%eax, (%esp)
	cmpl	$MC_OWNEDFP_FPU, MC_OWNEDFP_OFFSET(%edx)
	je	4f
	cmpl	$MC_OWNEDFP_PCB, MC_OWNEDFP_OFFSET(%edx)
	jne	6f
4:	cmpl	$MC_FPFMT_387, MC_FPFMT_OFFSET(%edx)
	jne	5f
	frstor	MC_FPREGS_OFFSET(%edx) /* restore 387 FP regs */
	jmp	7f
5:	cmpl	$MC_FPFMT_XMM, MC_FPFMT_OFFSET(%edx)
	jne	6f
	fxrstor	MC_FPREGS_OFFSET(%edx) /* restore XMM/SSE FP regs */
	jmp	7f
6:	fninit
	fldcw	MC_FP_CW_OFFSET(%edx)
7:	movl	48(%edx), %eax		/* restore ax, bx, cx, dx */
	pushl	68(%edx)		/* flags on stack */
	pushl	36(%edx)		/* %ebx on stack */
	pushl	44(%edx)		/* %ecx on stack */
	movl	40(%edx), %edx		/* %edx */
	/* 
	 * all registers are now moved out of mailbox, 
	 * it's safe to set current thread pointer
	 */
	cmpl	$0, %ecx
	je	8f
	movl	%ebx,(%ecx)
8:	popl	%ecx			/* %ecx off stack */
	popl	%ebx			/* %ebx off stack */
	popfl				/* flags off stack */
9:	ret				/* %eip off stack */

