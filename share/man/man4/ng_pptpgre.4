.\" Copyright (c) 1996-1999 Whistle Communications, Inc.
.\" All rights reserved.
.\" 
.\" Subject to the following obligations and disclaimer of warranty, use and
.\" redistribution of this software, in source or object code forms, with or
.\" without modifications are expressly permitted by Whistle Communications;
.\" provided, however, that:
.\" 1. Any and all reproductions of the source or object code must include the
.\"    copyright notice above and the following disclaimer of warranties; and
.\" 2. No rights are granted, in any manner or form, to use Whistle
.\"    Communications, Inc. trademarks, including the mark "WHISTLE
.\"    COMMUNICATIONS" on advertising, endorsements, or otherwise except as
.\"    such appears in the above copyright notice or in the software.
.\" 
.\" THIS SOFTWARE IS BEING PROVIDED BY WHISTLE COMMUNICATIONS "AS IS", AND
.\" TO THE MAXIMUM EXTENT PERMITTED BY LAW, WHISTLE COMMUNICATIONS MAKES NO
.\" REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, REGARDING THIS SOFTWARE,
.\" INCLUDING WITHOUT LIMITATION, ANY AND ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT.
.\" WHISTLE COMMUNICATIONS DOES NOT WARRANT, GUARANTEE, OR MAKE ANY
.\" REPRESENTATIONS REGARDING THE USE OF, OR THE RESULTS OF THE USE OF THIS
.\" SOFTWARE IN TERMS OF ITS CORRECTNESS, ACCURACY, RELIABILITY OR OTHERWISE.
.\" IN NO EVENT SHALL WHISTLE COMMUNICATIONS BE LIABLE FOR ANY DAMAGES
.\" RESULTING FROM OR ARISING OUT OF ANY USE OF THIS SOFTWARE, INCLUDING
.\" WITHOUT LIMITATION, ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
.\" PUNITIVE, OR CONSEQUENTIAL DAMAGES, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES, LOSS OF USE, DATA OR PROFITS, HOWEVER CAUSED AND UNDER ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF WHISTLE COMMUNICATIONS IS ADVISED OF THE POSSIBILITY
.\" OF SUCH DAMAGE.
.\" 
.\" Author: Archie Cobbs <archie@whistle.com>
.\"
.\" $FreeBSD$
.\" $Whistle: ng_pptpgre.8,v 1.2 1999/12/08 00:20:53 archie Exp $
.\"
.Dd November 29, 1999
.Dt NG_PPTPGRE 8
.Os FreeBSD
.Sh NAME
.Nm ng_pptpgre
.Nd PPP protocol netgraph node type
.Sh SYNOPSIS
.Fd #include <netgraph/ng_pptpgre.h>
.Sh DESCRIPTION
The
.Nm pptpgre
node type performs Generic Routing Encapsulation (GRE) over IP
for the PPTP protocol as specified by RFC 2637.  This involves packet
encapsulation, sequencing, acknowlegement, and an adaptive timeout
sliding window mechanism.  This node type does not handle any of
the TCP control protocol or call negotiation defined by PPTP.
.Pp
The typical use for this node type would be to connect the
.Dv upper
hook to one of the link hooks of a
.Xr ng_ppp 8
node, and the
.Dv lower
hook to the
.Dv "inet/raw/gre"
hook of a
.Xr ng_ksocket 8
node.
.Sh HOOKS
This node type supports the following hooks:
.Pp
.Bl -tag -compact -width vjc_vjuncomp
.It Dv upper
Connection to the upper protocol layers
.It Dv lower
Connection to the lower protocol layers
.El
.Pp
.Sh CONTROL MESSAGES
This node type supports the generic control messages, plus the following:
.Bl -tag -width foo
.It Dv NGM_PPTPGRE_SET_CONFIG
This command resets and configures the node for a session.
This command takes a
.Dv "struct ng_pptpgre_conf"
as an argument:
.Bd -literal -offset 0
/* Configuration for a session */
struct ng_pptpgre_conf {
    u_char      enabled;          /* enables traffic flow */
    u_char      enableDelayedAck; /* enables delayed acks */
    u_int16_t   cid;              /* my call id */
    u_int16_t   peerCid;          /* peer call id */
    u_int16_t   recvWin;          /* peer recv window size */
    u_int16_t   peerPpd;          /* peer packet processing delay
                                     (in 1/10 of a second) */
};

.Ed
The
.Dv enabled
field enables traffic flow through the node.  The
.Dv enableDelayedAck
field enables delayed acknowledgement (maximum 250 miliseconds), which
is a useful optimization and should generally be turned on.
The remaining fields are as supplied by the PPTP virtual call setup process.
.It Dv NGM_PPTPGRE_GET_CONFIG
Returns the current configuration as a
.Dv "struct ng_pptpgre_conf" .
.El
.Sh SHUTDOWN
This node shuts down upon receipt of a
.Dv NGM_SHUTDOWN
control message, or when both hooks have been disconnected.
.Sh SEE ALSO
.Xr netgraph 4 ,
.Xr ng_ksocket 8 ,
.Xr ng_ppp 8 ,
.Xr ngctl 8 .
.Rs
.%A K. Hamzeh
.%A G. Pall
.%A W. Verthein
.%A J. Taarud
.%A W. Little
.%A G. Zorn
.%T "Point-to-Point Tunneling Protocol (PPTP)"
.%O RFC 2637
.Re
.Rs
.%A S. Hanks
.%A T. \&Li
.%A D. Farinacci
.%A P. Traina
.%T "Generic Routing Encapsulation over IPv4 networks"
.%O RFC 1702
.Re
.Sh AUTHOR
Archie Cobbs <archie@whistle.com>
