.\" Copyright (c) 2003 Hidetoshi Shimokawa
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
.\" ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $FreeBSD$
.\"
.\"
.Dd February 11, 2003
.Dt DCONS 4
.Os
.Sh NAME
.Nm dcons
.Nd dumb console device driver
.Sh SYNOPSIS
.Cd device dcons
.Pp
.Cd options DDB
.Cd options ALT_BREAK_TO_DEBUGGER
.Pp
.Cd device firewire
.Sh DESCRIPTION
The
.Nm
device is the simple console device which just reads from and writes to
an allocated buffer for input and output respectivly.
It is no use by itself and it is supposed that the buffer is accessed
via a bus like
.Xr FireWire 4
for interaction.
.Pp
The buffer consists of 4 channels.
There are 2 ports, one for console tty and other is GDB ports then each port
has a input channel and a output channel.
The physical address of the buffer is sometimes neccesary to acess the buffer.
You can get the address by
.Xr sysctl 8
or
.Xr dmesg 8
.
.Sh EXAMPLE
If you want to run
.Xr getty 8
on dcons, insert following line into 
.Xr /etc/ttys 5
and
send a HUP signal to
.Xr init 8
using 
.Xr kill 1 .
.Bd -literal -offset indent
dcons	"/usr/libexec/getty std.9600"	vt100	on  secure
.Ed
.Pp
You can use either of the following commands to obtain physical
address of the buffer.
.Bd -literal -offset indent
% sysctl kern.dcons.paddr
kern.dcons.paddr: 4732704
% dmesg | grep dcons: | tail -1
dcons: virtual 0xc0483720 physical 0x483720 quad 0x120dc8
.Ed
.Pp
In this example, the buffer is located at 4732704 in decimal
and 0x483720 in hex.
.Pp
Once
.Xr fwochi 4
device is initialized to allow physical access,
the buffer can be accessed from another host via FireWire bus using
.Xr fwchat 8
application. See
.Xr fwchat 8
for more details.
.Pp
.Sh FILES
.Bl -tag -width indent -compact
.It Pa /dev/dcons
.It Pa /dev/dconsctl
.It Pa /etc/ttys
.El
.Sh SEE ALSO
.Xr ddb 4 ,
.Xr firewire 4 ,
.Xr fwohci 4 ,
.Xr fwchat 8 ,
.Xr fwcontrol 8 ,
.Xr ttys 5
.Sh AUTHORS
.An Hidetoshi Shimokawa Aq simokawa@FreeBSD.org
.Sh BUGS
This driver is still under development.
.Pp
