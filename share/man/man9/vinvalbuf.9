.\"
.\" Copyright (C) 2001 Chad David <davidc@acns.ab.ca>. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice(s), this list of conditions and the following disclaimer as
.\"    the first lines of this file unmodified other than the possible
.\"    addition of one or more copyright notices.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice(s), this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S) ``AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
.\" DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
.\" CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
.\" DAMAGE.
.\"
.\" $FreeBSD$
.\"
.Dd July 7, 2001
.Dt VINVALBUF 9
.Os
.Sh NAME
.Nm vinvalbuf
.Nd "Flushes and invalidates all buffers associated with a vnode"
.Sh SYNOPSIS
.Fd #include <sys/vnode.h>
.Ft int
.Fo vinvalbuf
.Fa "struct vnode *vp"
.Fa "int flags"
.Fa "struct ucred *cred"
.Fa "struct proc *p"
.Fa "int slpflag"
.Fa "int slptimeo"
.Fc
.Sh DESCRIPTION
The
.Nm
function invalidates all of the buffers associated with the given vnode.
This includes buffers on the clean list and the dirty list.  If the V_SAVE
flag is specified then the buffers on the dirty list are synced prior to being
released.  If there is a VM Object associated with the vnode it is removed.
.Pp
Its arguments are:
.Bl -tag -width spltimeo
.It Ar vp
A pointer to the vnode whose buffers will be invalidated.
.It Ar flags
The only supported flag is V_SAVE and it indicates that dirty buffers should by synced.
.It Ar cred
The user credentials that are used to
.Fn VOP_FSYNC ""
buffers if V_SAVE is set.
.It Ar p
The process responsible for this call.
.It Ar slpflag
The slp flag that will be used in the priority of any sleeps in the function.
.It Ar slptimeo
The timeout for any sleeps in the function.
.El
.Sh LOCKS
The vnode is assumed to be locked prior to the call and remains locked upon return.
.Pp
Giant must be held by prior to the call and remains locked upon return.
.Sh RETURN VALUES
A 0 value is returned on success. 
.Sh PSEUDOCODE
.Bd -literal
	vn_lock(devvp, LK_EXCLUSIVE | LK_RETRY, p);
	error = vinvalbuf(devvp, V_SAVE, cred, p, 0, 0);
	VOP_UNLOCK(devvp, 0, p);
	if (error)
		return (error);
.Ed
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er ENOSPC
The filesystem is full. (With V_SAVE)
.It Bq Er EDQUOT
Disc quota exceeded. (With V_SAVE)
.It Bq Er EWOULDBLOCK
Sleep operation timed out (See slptimeo)
.It Bq Er ERESTART
A signal needs to be delivered and the system call should be restarted (With PCATCH set in slpflag)
.It Bq Er EINTR
The system has been interrupted by a signal (With PCATCH set in slpflag)
.El
.Sh SEE ALSO
.Xr brelse 9
.Xr bremfree 9
.Xr VOP_FSYNC 9
.Xr tsleep 9
.Sh AUTHORS
This man page was written by Chad David.
