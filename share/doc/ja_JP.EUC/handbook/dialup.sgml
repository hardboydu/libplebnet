<!-- $Id: dialup.sgml,v 1.6 1997/02/22 13:00:53 peter Exp $ -->
<!-- The FreeBSD Japanese Documentation Project -->
<!-- Original revision: 1.17 -->
<!-- This is an SGML document in the linuxdoc DTD of the Tutorial for
     Configuring a FreeBSD for Dialup Services by Guy Helmer.
<!DOCTYPE linuxdoc PUBLIC "-//Linux//DTD linuxdoc//EN">


<article>

<title>
FreeBSD でダイアルアップ サービスを行うための設定
<author>Guy Helmer, <tt/ghelmer@alpha.dsu.edu/
<date>v0.1, 28 March 1995
<abstract>

-->

<sect><heading>ダイアルインサービス<label id="dialup"></heading>

<p><em>原作: &a.ghelmer;.</em>
<p><em>訳: &a.max;.<newline>6 September 1996.</em>

このドキュメントでは, FreeBSD で外部からのモデムによるアクセスを受け付
けるための設定に関してまとめてあります. このドキュメントは筆者が 
FreeBSD 1.0, 1.1 および 1.1.5.1 での経験と, 他の UNIX 系 OS での経験を
基に書いたものですが, 必ずしも十分な内容でないかもしれませんし, 掲載し
た実例もあなたが今お使いの環境とは一致しないかもしれません. また, 筆者
はこのドキュメントに従って行われた作業でデータが失われたりシステムが破
壊されるようなことがあっても, 一切責任をとれません.

<sect1><heading>設定を始める前に<label id="dialup:prereqs"></>
<p>

筆者は, 読者が FreeBSD に関する基本的な知識をもっていることを仮定して
このドキュメントをまとめました. まず, FreeBSD が既にインストールされ
ていて, UNIX 系環境においてファイルの編集の方法やシステムに付属のマニュ
アルを参照する方法を知っている必要があります. また, 以下に示すように, 
 FreeBSD の特定のバージョンが必要となりますし, いくつかの用語に関する
知識, そしてモデムや多少の配線に関する知識も必要となります. 

<sect2><heading>FreeBSD のバージョン</heading>
<p>

まず, FreeBSD のバージョンは 1.1 以上を使用してください (バージョン 
2.x でもかまいません. ). FreeBSD 1.0 には, 2種類のシリアル ドライバ
が含まれているので, 混乱の元となり得ます. また, FreeBSD のシリアル 
ディバイス ドライバ (<tt/sio/) は, バージョンを追う毎に改善されてき
ていますので, より新しいバージョンの FreeBSD を使用することで, よりよ
い, より効率の高いドライバを利用することができるはずです. 

<sect2><heading>用語解説</heading>
<p>

以下, 簡単にいくつかの用語について解説しておきます. 

<descrip>

<tag/bps/ Bits per Second　の略で, データの転送速度を表す単位. 

<tag/DTE/ Data Terminal Equipment の略. たとえばコンピュータ本体のこと. 

<tag/DCE/ Data Communications Equipment の略で, 具体的にはモデムのこと. 

<tag/RS-232/ EIA (米電気産業協会) のハードウェア間シリアル通信の標準規
格. 

</descrip>

これらの用語やデータ通信一般に関して, より詳しい情報が必要な場合は, 
<em/The RS-232 Bible/ という本 (誰か ISBN 分かる方いませんか?) が参考
になると思います. 

通信においてのデータ転送速度に関して, このドキュメントでは <bf/ボーレー
ト/ (baud rate) ではなく, <bf/bps/ (bits per second) をその単位として
使うことにします. これは, ボーというのは一定時間に生じる電気的状態の変
化の数を表す単位にすぎず, <bf/bps/ という単位の方が実体に即しているか
らです. (少なくとも, こういう表現をしておけば, 意地の悪い人に怒られる
こともないのではないかと思います. )

<sect2><heading>外づけモデムと内蔵モデムについて</heading>
<p>

ダイアルアップのサービスに関していえば, 外づけのモデムの方が適している
ようです. これは, 多くの外づけのモデムは設定を不揮発ラムに書き込んで半
永久的に保存することができますし, また RS-232 に関する重要な情報を知る
ための点滅するライトによるインディケータが搭載されているからです. 点滅
するライトは, システムを見に来た訪問者に強い印象を与えるという効果だけ
でなく, モデムが適切に動作しているかどうかを知るためにも有効です. 

一方, たいていの内蔵型のモデムには不揮発性ラムが搭載されていないため, 
ディップ スイッチの変更以外に設定を保存する方法がありません. また, も
しインディケータがついていても, おそらくコンピュータのケース カバーが
外されていなければその状態を確認するのは難しいでしょう. 

<sect2><heading>モデムとケーブル</heading>
<p>

以下のことに関して, 予め知っておく必要があります. 

<itemize>

<item> コンピュータとモデムの間での通信が行えるようにするための接続方
法. (内蔵型の場合は接続の必要はありません)

<item> お使いのモデムのコマンドについての知識, あるいはコマンドの解説
の在処

<item> (通信ソフトを使っての) モデムの不揮発ラムに保存可能な設定の変更
方法

</itemize>

1番目のモデムの接続はたいてい簡単に行えるはずです. ほとんどのストレー
ト シリアル ケーブルが使えるでしょう. 使用すべきケーブルは, 両端に適
切なコネクタ (DB-25 または DB-9 の雄または雌) のついた, DCE-DTE 間接
続用のもので, 以下の信号線が接続されていなければなりません. 

<itemize>
<item> Transmitted Data (<tt/SD/)
<item> Received Data (<tt/RD/)
<item> Request to Send (<tt/RTS/)
<item> Clear to Send (<tt/CTS/)
<item> Data Set Ready (<tt/DSR/)
<item> Data Terminal Ready (<tt/DTR/)
<item> Carrier Detect (<tt/CD/)
<item> Signal Ground (<tt/SG/)
</itemize>

FreeBSD で 2400bps 以上の転送速度を利用する場合には, フロー制御のため
に <tt/RTS/ 信号と <tt/CTS/ 信号が必要です. また, 接続の確立と回線の切
断を検出するために <tt/CD/ 信号を利用します. さらに, <tt/DTR/ 信号を使っ
て回線切断後のモデムのリセットを行います. ケーブルの中には, 総ての必要
な信号線が接続されていないものもありますので, たとえば, 回線切断後でも
ログイン セッションが残ってしまうといった問題が発生した場合などには, 
ケーブルに問題がある可能性もあります.

次に, お使いのモデムにもよりますが, もしモデムのコマンドをよく覚えてい
ない場合は, モデムのマニュアルをすぐに参照できるようにしておいてくださ
い. このドキュメントでは例として USR Sportstar の 14,400 bps の外づけ型
モデムのコマンドを示しておきます. 他の種類のモデムをお使いの場合も, 参
考になるかもしれません. 

最後に, FreeBSDで快適にモデムを使うためにも, モデムの設定方法を知って
おく必要があります. FreeBSD も他の UNIX 系 OS と同様, 回線の接続およ
び切断の検出や回線の切断および回線切断後のモデムの初期化にハードウェア 
シグナルを利用します. FreeBSD は, モデムに対するコマンドの送信やモデ
ムの状態の監視を行いません. パソコンで運用されている BBS への接続に慣
れている方にとっては, ちょっとめんどうかもしれませんね. 

<sect2><heading>シリアル インタフェースについて</heading>
<p>

FreeBSD では, NS8250-, NS16450-, NS16550- および NS16550A- に基づ
いた EIA RS-232C (CCITT V.24) 規格のシリアル インタフェースをサポート
しています. 8250 および 16450 ベースのディバイスには1文字のキャラクタ 
バッファが搭載されています. また, 16550 系のディバイスには, 16文字分
のバッファが搭載されていて, はるかによいパフォーマンスを得られます. 
(ただし, 無印の 16550 では, バグがあって 16 文字バッファが利用できませ
んので, 可能であれば 16550A 系のディバイスを利用してください. ) 1文字
のバッファの物は, 16550 系のものと比べて OS にかける負荷が大きいので, 
16550A 系ディバイスの利用を強く推奨します. 多数のシリアル ポートを利
用する場合や, 負荷の高いシステムにおいては, 16550A 系ディバイスを使う
ことで, エラー発生率を低く押さえることができます. 

<sect1><heading>概要</heading>
<p>

FreeBSD は以下の手順でモデムからのログインを受付ます. <tt/init/ から起
動された <tt/getty/ のプロセスが, 割り当てられたシリアル ポート (この
例では <tt>/dev/ttyd0</tt>) がオープンされるのを辛抱強く待ちます. 
<tt/ps ax/ コマンドを実行すると, 以下のような出力が得られるはずです. 

<tscreen><verb>
 4850 ??  I      0:00.09 /usr/libexec/getty V19200 ttyd0
</verb></tscreen>

ユーザがモデムに電話をかけ, モデム同士が接続されると, モデムの <tt/CD/
が検出されます. その結果, kernel がキャリア信号を検出して, 
<tt/getty/ によるポートのオープンの処理が終了します. <tt/getty/ は, 
<tt/login:/ プロンプトを指定されている初期回線速度で送信します. 
<tt/getty/ は, 正常に文字列を受信できるかどうか監視し, 通常の設定では, 
もし以上な文字列を検出した場合 (理由としては, <tt/getty/ の速度とモデ
ムの接続速度が異なっているような場合が考えられます. ), 正常に文字列が
受信できるまで, <tt/getty/ は速度を変え続けます. 

<tt/getty/ が正しい速度を検出すれば, ユーザに対して <tt/login:/ プロン
プトが表示されるはずです. ユーザがログイン名を入力すると, <tt/getty/ 
は <tt>/usr/bin/login</tt> を起動して, パスワードの入力を要求し, その
後ユーザのシェルを起動します. 

それでは, 続いて設定についての解説です. 

<sect1><heading>Kernel の設定</heading>
<p>

通常, FreeBSD の kernel は, PC-DOS の世界で <tt/COM1:/, <tt/COM2:/ 
, <tt/COM3:/ および <tt/COM4:/ と呼ばれる四つのシリアル ポートを探す
ように設定されています. また, FreeBSD では, 現在のところ Boca の 1008 
や 2016 のような, 単純なマルチポートのシリアル インタフェースもサポー
トしています. (マルチポートのシリアル ボードに関しての kernel の設定
については, <tt/sio(4)/ のマニュアルを参照してください. ) デフォルト
の kernel は, COM ポートだけを探します. 

搭載されているシリアル ポートのいずれかを, kernel が認識しているかどう
か確認したい場合は, kernel 起動時のメッセージを注意深く見ているか, あ
るいは <tt>/sbin/dmesg</tt> コマンドを使って, ブート時の出力メッセージ
を確認してください. 特に, <tt/sio/ で始まるメッセージをよく見てくださ
い. 参考までに, 以下のコマンドで <tt/sio/ という文字列を含むメッセージ
だけを表示することができます.

<tscreen><verb>
/sbin/dmesg | grep 'sio'
</verb></tscreen>

たとえば, シリアル ポートを四つ持つシステムの場合は, 以下のようなシリ
アル ポートに関するメッセージが kernel によって表示されます. 

<tscreen><verb>
sio0 at 0x3f8-0x3ff irq 4 on isa
sio0: type 16550A
sio1 at 0x2f8-0x2ff irq 3 on isa
sio1: type 16550A
sio2 at 0x3e8-0x3ef irq 5 on isa
sio2: type 16550A
sio3 at 0x2e8-0x2ef irq 9 on isa
sio3: type 16550A
</verb></tscreen>

もし, kernel に正常に認識されないポートがある場合は, おそらくカスタマ
イズした kernel を構築する必要があるでしょう. 

kernel 構築と構築のための設定に関しては, BSD System Manager's Manual
の ``Building Berkeley Kernels with Config (config コマンドによる BSD
kernel の構築) '' &lsqb;ソース ファイルは 
<tt>/usr/src/share/doc/smm</tt> にあります&rsqb;と ``FreeBSD
Configuration Options'' &lsqb; <tt>/sys/conf/options</tt> および 
<tt>/sys/<em>arch</em>/conf/options.<em>arch</em></tt> の 
<em>arch</em>の部分をたとえば<tt>i386</tt>としたファイル &rsqb; を参照
してください. 

kernel の設定と構築をするためには, kernel のソース
 (FreeBSD 1.1 では <tt>srcdist/srcsys.??</tt>, FreeBSD 1.1.5.1 では 
<tt>srcdist/sys.??</tt>, またFreeBSD 2.0 では総てのソース)を展開
する必要があります. 

まだ自分のシステムの kernel 用のコンフィギュレーション ファイルを作っ
ていない場合は, <tt>/sys/i386/conf</tt> に <tt/cd/ して作成してくださ
い. 初めてコンフィギュレーション ファイルを作る場合は, まず GENRICAH
(FreeBSD 1.x で BusTek の SCSI コントローラを使っている場合は 
GENERICBT) というファイルを, <em/YOURSYS/ にコピーしてください. ここ
で, <em/YOURSYS/ はあなたのシステム名で, 大文字である必要があります. 
このファイルを編集して, ディバイスに関する記述を変更します. 

<tscreen><verb>
device		sio0	at isa? port "IO_COM1" tty irq 4 vector siointr
device		sio1	at isa? port "IO_COM2" tty irq 3 vector siointr
device		sio2	at isa? port "IO_COM3" tty irq 5 vector siointr
device		sio3	at isa? port "IO_COM4" tty irq 9 vector siointr
</verb></tscreen>

システムに搭載されていないディバイスに関する記述は, コメントアウトまた
は削除してしまってかまいません. Boca の BB2016 のようなマルチポートの
シリアル ボードをお持ちの場合は, <tt/sio(4)/ のマニュアルを見て, マ
ルチポートのボードのためのコンフィギュレーション ファイルの記述のし方
に関して確認してください. ディバイスのフラグの指定方法がバージョンによっ
て異なりますので, 別のバージョンの FreeBSD で利用していたコンフィギュ
レーション ファイルを流用する場合には十分注意してください. 

なお, <tt/port "IO_COM1"/, <tt/"IO_COM2"/, <tt/"IO_COM3"/ および 
<tt/"IO_COM4"/ は, それぞれのポートの一般的なアドレスである <tt/0x3f8/, 

<tt/0x2f8/, <tt/0x3e8/ および <tt/0x2e8/ を表します. また, 割り込
み番号 4, 3, 5 と 9 は, それぞれ <tt/COM1:/ から <tt/COM4:/ のポー
トで一般的に使用される IRQ です. また, ISA バスのコンピュータの場合, 
一般的なシリアルポートは複数のポートで一つの IRQ を共有することが <bf>
できません</bf>ので注意が必要です. (マルチポートのシリアル ボードの
場合は, 複数の 16550A ベースのポートで一つまたは二つの IRQ を共有する
ための機構を備えています. )

コンフィギュレーション ファイルの編集が終わったら, ``Building
Berkeley Kernels with Config (config コマンドによる BSD kernel の構築)'' 
および <tt/config(8)/ のマニュアルにしたがって, <tt/config/ コマンド
を使って kernel 構築のためのディレクトリを作成した後, kernel の構築, 
インストールおよびテストを行ってください. 

<sect1><heading>ディバイス スペシャル ファイル</heading>
<p>

kernel に組み込まれているほとんどのディバイスは, <tt>/dev</tt> ディレ
クトリにある, 「ディバイス スペシャル ファイル」を介してアクセスされ
ます. <tt/sio/ ディバイスの場合は, 着信用の <tt>/dev/ttyd?</tt> およ
び, 発信用の <tt>/dev/cua0?</tt> が利用されます. さらに, FreeBSD の
1.1.5 以降では, 初期化ディバイス (<tt>/dev/ttyi?</tt> と 
<tt>/dev/cuai0?</tt>)およびロッキング ディバイス (<tt>/dev/ttyld?</tt> と 
<tt>/dev/cual0?</tt>) も合わせて利用されます. 初期化ディバイスは, 通信
ポートがオープンされる度に, そのポートの初期設定を行うために使われます. 
たとえば, <tt>CTS/RTS</tt> によるフロー制御を行うモデムが接続されてい
る場合の <tt/crtscts/ などのパラメータの初期化が行われます. ロッキング 
ディバイスは, ポートの設定をロックし, 他のユーザやプログラムにこれらを
変更されることのないようにするために利用されます. 通信ポートの設定, 初
期化とロックおよび設定の変更に関しては, それぞれ <tt/termios(4)/,
<tt/sio(4)/ と <tt/stty(1)/ のマニュアルをご覧ください. 

<sect2><heading>ディバイス スペシャル ファイルの作成</heading>
<p>

ディバイス スペシャル ファイルの管理は, ディレクトリ <tt>/dev</tt> 
にあるシェル スクリプト <tt/MAKEDEV/ によって行います. (FreeBSD
1.1.5 の <tt/MAKEDEV(8)/ のマニュアルの <tt/COM/ ポートに関する記述は, 
かなりいい加減なので無視してください. ) <tt/MAKEDEV/ を使って, 
<tt/COM1:/ (ポート 0) をダイアルアップのポートとして利用するためのディ
バイス スペシャル ファイルを作るには, <tt>/dev</tt> に <tt/cd/ して
から, <tt/MAKEDEV ttyd0/ と実行してください. 同様に, <tt/MAKEDEV
ttyd1/ とすることで, <tt/COM2:/ (ポート 1)  用のディバイス スペシャル ファイル
を作成することができます. 

<tt/MAKEDEV/ は, <tt>/dev/ttyd?</tt> のディバイス ファイルだけでなく,
<tt>/dev/cua0?</tt> (および FreeBSD 1.1.5 以降では総ての初期化ディバイ
スとロッキング ディバイスのスペシャル ファイル) も作成します. さらに, 
もしシリアル端末用のスペシャル ファイル<tt>/dev/tty0?</tt> が存在すれ
ば, それらの削除も行います.

ディバイス スペシャル ファイルの作成後, これらのファイルのパーミション
が適切に設定されていて, これらのディバイスを利用してもよいユーザのみが
読み書きできるようになっていることを確認してください. (特に 
<tt>/dev/cua*</tt> のパーミションには注意を払ってください. ) この確認
を怠ると, 一般のユーザがあなたのモデムを使うことができるようなことにな
りかねません. デフォルトの <tt>/dev/cua*</tt> のパーミションは, 以下の
ようになっていて, たいていの場合適切なものだと思います. 

<tscreen><verb>
crw-rw----    1 uucp     dialer    28, 129 Feb 15 14:38 /dev/cua01
crw-rw----    1 uucp     dialer    28, 161 Feb 15 14:38 /dev/cuai01
crw-rw----    1 uucp     dialer    28, 193 Feb 15 14:38 /dev/cual01
</verb></tscreen>

上の設定では, ユーザ <tt/uucp/ と, グループ <tt/dialer/ に属するユーザ
が発信用のディバイスを利用できます. 

<sect1><heading>設定ファイル</heading>
<p>

FreeBSD のシステムへのダイアル アップによるアクセスを実現するために編
集が必要と思われる設定ファイルが, <tt>/etc</tt> ディレクトリに三つあ
ります. まず, <tt>/etc/gettytab</tt> には, 
<tt>/usr/libexec/getty</tt> デーモンの設定を記述します. つぎに, 
<tt>/etc/ttys</tt> に保存されている情報から, <tt>/sbin/init</tt> はど
の <tt/tty/ ディバイスに対して <tt/getty/ のプロセスを実行するべきか判
断します. 最後に, お使いの FreeBSD が 1.1.5.1 以降のものならば 
<tt>/etc/rc.serial</tt> スクリプトに, それ以前のものならば 
<tt>/etc/rc.local</tt> スクリプトにシリアル ポートの初期化のためのコマ
ンドを記述することができます. 

UNIX にダイアル アップ モデムを接続する方法には, 二つの考え方がありま
す. 一つの方法は, ダイアル インしてくるユーザの接続速度に関係なく, 常
にモデムとローカルのコンピュータの RS-232 インタフェースの接続速度を一
定に保つように設定する方法です. この設定の長所は, ユーザがダイアル イ
ンして接続されると, 即座にシステムからのログイン プロンプトが送信され
るということです. 短所は, システムが実際のモデム間の速度を知ることがで
きないために, Emacs のようなフル スクリーンのプログラムが, 端末との接
続速度が遅い場合でも, そのような場合に効果的な方法で画面出力を行わない
点です.

もう一つは, モデムの RS-232 インタフェースとコンピュータの接続速度を, 
モデム間の接続速度に応じて変化させるような設定です. たとえば, モデム間
の接続が V.32bis (14.4 Kbps) ならば, モデムとコンピュータの間の接続を 
19.2 Kbps とし, モデム間の接続が 2400 bps の時には, モデムとコンピュー
タ間も 2400 bps で接続するような設定をします. この場合, <tt/getty/ は, 
モデムが返すリザルト コードからモデムとコンピュータの接続速度を認識す
ることができませんので, <tt/getty/ は, まず初期速度で <tt/login:/ とい
う文字列を送信して, それに対する応答の文字列を監視します. ここで, ユー
ザ側の端末に無意味な文字列が表示された場合, ユーザは意味のある文字列を
受信するまで <tt>&lt;Enter&gt;</tt> キーを繰り返し押さなければならない
ということを知っていると仮定しています. もし接続速度が間違っている場合,
<tt/getty/ は, ユーザから送られた文字を無意味な文字列として扱い, 次の
速度を試します. そして, ここで再度 <tt/login:/ プロンプトを送信します. 
この一連の動作が異常な回数繰り返されることも考えられますが, 普通は1度
か2度のキー入力があれば, ユーザはまともなプロンプトを受信できます. こ
のログインの動作が前者の固定速度による方法に比べて美しくないのは明らか
ですが, この方法では, 低速度で接続しているユーザに対するフル スクリー
ンのプログラムからのレスポンスが改善されます.

このドキュメントでは, 両方の設定方法について解説しますが, どちらかとい
うとモデム間の速度に応じて RS-232 インタフェースの速度が変化するような
設定の方に偏った説明になってしまうと思います. 

<sect2><heading>/etc/gettytab</heading>
<p>

<tt>/etc/gettytab</tt> は, <tt/getty(8)/ の設定ファイルで, 
<tt/termcap(5)/ と同様の形式で記述されます. ファイルのフォーマットや定
義できる機能についての詳細については, <tt/gettytab(4)/ のマニュアルを
ご覧ください. 

<sect3><heading>固定速度の設定</heading>
<p>

モデムとコンピュータ間の通信速度を固定して使う場合, おそらく 
<tt>/etc/gettytab</tt> に特に変更を加える必要はないはずです. 

<sect3><heading>可変速度の設定</heading>
<p>

<tt/getty/ が利用するモデムとコンピュータの接続速度に関する情報を 
<tt>/etc/gettytab</tt> に記述する必要があります. もし, 2400 bps のモ
デムをお使いになるのであれば, 既存の <tt/D2400/ のエントリがそのまま利
用できるでしょう. このエントリは FreeBSD の 1.1.5.1 の <tt/gettytab/ 
には既に含まれていますので, あなたの FreeBSD のバージョンでこのエント
リが存在しているのであれば, 新たに追加する必要はありません. 

<tscreen><verb>
#
# Fast dialup terminals, 2400/1200/300 rotary (can start either way)
#
D2400|d2400|Fast-Dial-2400:\
        :nx=D1200:tc=2400-baud:
3|D1200|Fast-Dial-1200:\
        :nx=D300:tc=1200-baud:
5|D300|Fast-Dial-300:\
        :nx=D2400:tc=300-baud:
</verb></tscreen>

高速モデムをお使いの場合は, おそらく <tt>/etc/gettytab</tt> に新たなエ
ントリを追加する必要があります. 以下の例は, 14.4 Kbps のモデムを, 最
大インタフェース速度を 19.2 Kbps として利用するためのエントリです. 

<tscreen><verb>
#
# Additions for a V.32bis Modem
#
um|V300|High Speed Modem at 300,8-bit:\
        :nx=V19200:tc=std.300:
un|V1200|High Speed Modem at 1200,8-bit:\
        :nx=V300:tc=std.1200:
uo|V2400|High Speed Modem at 2400,8-bit:\
        :nx=V1200:tc=std.2400:
up|V9600|High Speed Modem at 9600,8-bit:\
        :nx=V2400:tc=std.9600:
uq|V19200|High Speed Modem at 19200,8-bit:\
        :nx=V9600:tc=std.19200:
</verb></tscreen>

上記の例を利用した場合, FreeBSD 1.1.5 以降ではパリティなし, 8ビットの
接続が行われます. FreeBSD 1.1 では, <tt/:np:/ パラメータをファイルの
先頭の <tt/std.<em/xxx/</tt> のエントリに追加することで, パリティなし, 
8ビットの接続が行われますが, このパラメータを追加しなければ接続は偶数
パリティ, 7ビットになります. 

上記の例では, まず 19.2 Kbps (V.32bis) によるモデムとコンピュータ間の
接続を試み, 続いて 9600 bps (V.32), 2400 bps, 1200 bps, 300 bpsと順に
試み, 再び 19.2 Kbps による接続を試みるという循環に入ります. この接続
速度の循環は, <tt/nx=/(<bf/next table/) の機能で実現されています. ま
た, 各行はそれぞれ <tt/tc=/(<bf/table continuation/) の機能を使って, 
その他の接続速度に依存した「標準的な」設定を取り込んでいます. 

もし, お使いのモデムが 28.8 Kbps であったり, 14.4 Kbps の圧縮転送の機
能を有効に利用したい場合は, 19.2 Kbps よりも速い速度を利用するように
設定する必要があります. 以下に 57.6 Kbps から接続を試みる 
<tt/gettytab/ の設定例を示しておきます. 

<tscreen><verb>
#
# Additions for a V.32bis or V.34 Modem
# Starting at 57.6 Kbps
#
vm|VH300|Very High Speed Modem at 300,8-bit:\
        :nx=VH57600:tc=std.300:
vn|VH1200|Very High Speed Modem at 1200,8-bit:\
        :nx=VH300:tc=std.1200:
vo|VH2400|Very High Speed Modem at 2400,8-bit:\
        :nx=VH1200:tc=std.2400:
vp|VH9600|Very High Speed Modem at 9600,8-bit:\
        :nx=VH2400:tc=std.9600:
vq|VH57600|Very High Speed Modem at 57600,8-bit:\
        :nx=VH9600:tc=std.57600:
</verb></tscreen>

もし, お使いの CPU が低速のものであったり, CPU に対する負荷が高い場合
で, 16650A 系のシリアル ポートをお使いでない場合, 57.6 Kbps の接続に
おいて, sio の ``slio'' エラーが発生するかもしれません. 

<sect2><heading>/etc/ttys<label id="dialup:ttys"></heading>
<p>

<tt>/etc/ttys</tt> には, <tt/init/ が監視すべき <tt/tty/ のリストを記
述します. さらに, <tt>/etc/ttys</tt> は, <tt/login/ に対してセキュリ
ティに関する情報を提供します. (ユーザ <tt/root/ は, <tt/secure/ とマー
クされている <tt/tty/ のみからログインできます. ) 詳しくは 
<tt/ttys(5)/ のマニュアルをご覧ください. 

<tt>/etc/ttys</tt> の既存の行を変更するか, あるいは新しい行を追加して, 
<tt/init/ が自動的に新しいダイアル アップ サービス用のポートに対して 
<tt/getty/ プロセスを起動するようにしてください. 書式は, 固定速度の設
定か可変速度の設定かに関わらず, 以下のとおりです. 

<tscreen><verb>
ttyd0   "/usr/libexec/getty xxx"   dialup on
</verb></tscreen>

1番目の項目は, このエントリで対象とするディバイス スペシャル ファイル
です. 上の例では <tt/ttyd0/ として, <tt>/dev/ttyd0</tt> を <tt/getty/ 
に監視させることを表しています. 2番目の項目 <tt>"/usr/libexec/getty
<em/xxx/"</tt> (<em/xxx/ は初期段階で使われる <tt/gettytab/ のエントリ
に置き換えてください. ) が, <tt/init/ がこのディバイスに対して起動する
プロセスです. 3番目の <tt/dialup/ は, デフォルトのターミナル タイプで
す. 4番目の <tt/on/ は, この行が有効であることを <tt/init/ に対して示
しています. 5番目の項目に <tt/secure/ を指定することもできますが, これ
は, たとえばシステムのコンソールのように, 物理的に安全な端末に対しての
み指定するようにしてください.

デフォルトのターミナル タイプ (上記の例では <tt/dialup/) は, ローカル
のユーザの好みによって異なってきます. ユーザがログイン スクリプトをカ
スタマイズして, ターミナル タイプが <tt/dialup/ の時には自動的に他のター
ミナル タイプを設定できるように, ダイアル アップのポートのデフォルトの
ターミナル タイプには <tt/dialup/ が伝統的に用いられています. しかし, 
筆者のサイトでは, ほとんどのユーザが VT102 エミュレイションを使ってい
るので, ダイアル アップのポートのデフォルト ターミナル タイプとして 
<tt/vt102/ を指定しています. 

<tt>/etc/ttys</tt> の修正がすんだら, 以下のようなコマンドを使って 
<tt/init/ プロセスに <tt/HUP/ シグナルを送り, <tt>/etc/ttys</tt> を
読み込み直させてください. 

<tscreen><verb>
kill -1 1
</verb></tscreen>

ただ, もし初めてシステムを設定しているのであれば, モデムが適切に設定さ
れて接続されるまでは, <tt/init/ に対してシグナルを送らない方がいいか
もしれません. 

<sect3><heading>固定速度の設定</heading>
<p>

速度を固定する設定では, <tt>/etc/ttys</tt> の中で, <tt/getty/ に対し
て固定速度のエントリを指定する必要があります. たとえば, 以下の例はポー
トのスピードが 19.2 Kbps に固定されたモデムのための <tt/ttys/ のエント
リです. 

<tscreen><verb>
ttyd0   "/usr/libexec/getty std.19200"   dialup on
</verb></tscreen>

別の速度でモデムのポートのスピードを固定したい場合は, 
<tt>/etc/gettytab</tt> から適切なエントリを選んで, 上の例の 
<tt/std.19200/ の部分を <tt>std.<em/speed/</tt> として, 適切な速度のも
のに置き換えてください. 

<sect3><heading>可変速度の設定</heading>
<p>

可変速度の設定では, <tt/ttys/ のエントリが, <tt>/etc/gettytab</tt> 
の中の適切な「自動速度調整」の初期設定のエントリを参照していなければな
りません. たとえば, もし前述の 19.2 Kbps から接続を試みる可変速度の設
定例 (<tt/V19200/ の <tt/gettytab/ エントリ)をそのまま <tt/ttys/ に追
加したのであれば, <tt/ttys/ エントリは以下のようになります. 

<tscreen><verb>
ttyd0   "/usr/libexec/getty V19200"   dialup on
</verb></tscreen>

<sect2><heading>/etc/rc.serial または /etc/rc.local</heading>
<p>

V.32, V.32bis または V.34 モデムのような高速モデムを利用する場合, ハー
ドウェア (<tt>RTS/CTS</tt>) フロー制御を行う必要があります. FreeBSD
kernel のモデム ポートにハードウェア フロー制御のフラグを設定するため
の <tt/stty/ コマンドを, FreeBSD 1.1.5.1 以降では 
<tt>/etc/rc.serial</tt> に, FreeBSD 1.1 では <tt>/etc/rc.local</tt> に
記述できます. 

たとえば, FreeBSD 1.1.5.1 の <tt>/etc/rc.serial</tt> のサンプルは以下
のとおりです. 

<tscreen><verb>
#!/bin/sh
#
# Serial port initial configuration

stty -f /dev/ttyid1 crtscts
stty -f /dev/cuai01 crtscts
</verb></tscreen>

この例では, <tt/termio/ のフラグ <tt/crtscts/ をシリアル ポート &num;1
(<tt/com2:/) のダイアル インおよびダイアル アウトの初期化ディバイスに
設定しています. 

古い FreeBSD 1.1 では, 以下のエントリが <tt/crtscts/ フラグを設定する
ために <tt>/etc/rc.local</tt> に追加されていました. 

<tscreen><verb>
# Set serial ports to use RTS/CTS flow control
stty -f /dev/ttyd0 crtscts
stty -f /dev/ttyd1 crtscts
stty -f /dev/ttyd2 crtscts
stty -f /dev/ttyd3 crtscts
</verb></tscreen>

FreeBSD 1.1 には初期化のためのディバイス スペシャル ファイルがないので, 
ディバイス ファイルそのものにフラグを設定して, その後はフラグをクリア
してしまうような極悪人が現れないことを願うしかありません. 

<sect1><heading>モデムの設定</heading>
<p>

もし, あなたのモデムがパラメータを不揮発ラムに保存できるタイプならば, 
PC-DOS 上の Telix や FreeBSD 上の <tt/tip/ などのような通信プログラム
を使って, パラメータを設定してください. 
<tt/getty/ が利用する初期速度でモデムに接続して, 以下の条件を満たすよ
うに不揮発ラムの設定を変更してください. 

<itemize>

<item> 接続時に <tt/CD/ 信号がオンになる

<item> 接続時に <tt/DTR/ がオンになり, <tt/DTR/ オフで回線を切断しモ
デムをリセットする. 

<item> 送信時フロー制御には <tt/CTS/ を利用. 

<item> <tt>XON/XOFF</tt> によるフロー制御を行わない. 

<item> 受信時のフロー制御は <tt/RTS/ を使用. 

<item> Quiet mode (リザルト コードを返さない)

<item> コマンド エコーを返さない. 

</itemize>

これらを実現するためのコマンドやディップ スイッチの設定に関しては, モ
デムのマニュアルを参照してください. 

以下に, USRobotics Sportster の 14,400 bps の外づけモデムの設定例を示
しておきます. 

<tscreen><verb>
ATZ
AT&amp;C1&amp;D2&amp;H1&amp;I0&amp;R2&amp;W
</verb></tscreen>

ことのついでに, たとえば, V42.bis や MNP5 のデータ圧縮を使用するかど
うかなどのモデムの他の設定について確認, 調整しておくのもよいかもしれま
せん. 

さらに, USRobotics Sportster の 14,400 bps の外づけモデムでは, 以下の
ようなディップ スイッチの設定も必要です. 他のモデムをお使いの方も, 以
下の例を設定の参考にしてください. 

<itemize>

<item> スイッチ1: UP - DTR 標準

<item> スイッチ2: 無視 (リザルト コードを単語形式にするか数値形式にす
るか)

<item> スイッチ3: UP - リザルト コードを返さない

<item> スイッチ4: DOWN - コマンド エコーを返さない

<item> スイッチ5: UP - 自動着信

<item> スイッチ6: UP - CD 標準

<item> スイッチ7: UP - 不揮発ラムからデフォルト値をロードする

<item> スイッチ8: 無視 (Smart Mode/Dumb Mode)

</itemize>

リザルト コードを返さないように設定しておかないと, <tt/getty/ が誤っ
て <tt/login:/ プロンプトをコマンド モードのモデムに送信してしまった場
合に, モデムがこの入力をエコーしたり, この入力に対するリザルト コード
を返してしまったりすることになります. この結果として, モデムと 
<tt/getty/ の間で延々と無意味なやりとりが続いたというケースを聞いたこ
とがあります. 

<sect2><heading>固定速度の設定</heading>
<p>

固定速度の設定では, モデムとコンピュータ間の通信速度をモデムとモデム間
の接続速度に関係なく, 常に一定に保つように, モデムを設定する必要があり
ます. USRobotics Sportster の 14,400 bps 外づけモデムの場合, 以下のコ
マンドで, モデムとコンピュータ間の速度が, コマンド送信時の速度に固定さ
れます. 

<tscreen><verb>
ATZ
AT&amp;B1&amp;W
</verb></tscreen>

<sect2><heading>可変速度の設定</heading>
<p>

可変速度の設定では, シリアル ポートの速度が, 着信速度に応じて変化する
ように設定しなければいけません. USRobotics Sporster の 14,400 bps 外
づけモデムの場合, 以下のコマンドで, エラー訂正機能を利用した通信の場合
は, コマンドを送信した時の通信速度にシリアル ポートの速度を固定し, エ
ラー訂正機能を利用しない接続では, シリアル ポートの速度が変化するよう
に設定されます. 

<tscreen><verb>
ATZ
AT&amp;B2&amp;W
</verb></tscreen>

<sect2><heading>モデムの設定の確認</heading>
<p>

ほとんどの高速モデムには, 現在の設定をある程度人間にも理解できる形式に
して表示させるコマンドがあります. USRobotics Sporster の 14,400 bps 
外づけモデムの場合は, <tt/ATI5/ コマンドで, 現在の不揮発ラムの設定を
表示することができます. さらに, ディップ スイッチの設定も含めた現在の
設定を確認するためには, <tt/ATZ/ コマンドを送信してから, <tt/ATI4/ 
コマンドを送信してください. 

他のメーカーのモデムをお使いの場合は, モデムのマニュアルで設定値の確認
方法を確認してください. 

<sect1><heading>トラブルシューティング</heading>
<p>

以下の手順でダイアル アップ モデムの動作を確認することができます. 

<sect2><heading> FreeBSD システムの動作確認</heading>
<p>

モデムを FreeBSD システムに接続し, システムをブートします. あなたのモ
デムにモデムの状態を確認するためのインジケータがあれば, <tt/DTR/ のイ
ンジケータの状態に注目してください. もし, システムのコンソールに 
<tt/login:/ プロンプトが表示された時に, <tt/DTR/ のインジケータが点灯
すれば, FreeBSD が適切なポートに対して <tt/getty/ を起動し, モデムへ
の着信を待っている状態であることを意味しています. 

もし <tt/DTR/ のインジケータが点灯しない場合は, システムのコンソールか
ら FreeBSD にログインして, <tt/ps ax/ を実行し, FreeBSD が 適切なポー
トに対して<tt/getty/ プロセスを起動しようとしているのかどうか確認して
ください. プロセスに関する情報の中に, 以下のような行が表示されるはずで
す. 

<tscreen><verb>
  114 ??  I      0:00.10 /usr/libexec/getty V19200 ttyd0
  115 ??  I      0:00.10 /usr/libexec/getty V19200 ttyd1
</verb></tscreen>

モデムにまだ着信がない状態の時に, 以下のように上とは異なる出力があった
場合, <tt/getty/ は既にモデム ポートのオープンを終了したということに
なります. 

<tscreen><verb>
  114 d0  I      0:00.10 /usr/libexec/getty V19200 ttyd0
      ^^
</verb></tscreen>

<tt/getty/ は, <tt/CD/ (carrier detect) 信号がオンの状態になるまで, 
ポートのオープンを完了することはできませんので, この場合は接続に問題が
あるか, あるいはモデムの設定に問題があることが考えられます. 

もし, 適切なポートをオープンしようとしている <tt/getty/ が見あたらない
場合は, 再度 <tt>/etc/ttys</tt> の内容を確認し, 書式などに誤りがないか
調べてみてください. また, ログ ファイル <tt>/var/log/messages</tt> に 
<tt/init/ および <tt/getty/ から何か出力がないかどうかも確認してみてく
ださい. もし何かメッセージが記録されていたら, 再度 <tt>/etc/ttys</tt> , 
<tt>/etc/gettytab</tt> の二つの設定ファイルと, ディバイス スペシャル 
ファイル <tt>/dev/ttyd?</tt> を確認し, 記述に誤りがないか, 足りないエ
ントリがないか, 足りないディバイス スペシャルファイルがないかといった
点について調べてみてください. 

<sect2><heading>モデムで接続してみる</heading>
<p>

実際にモデムを使って別のコンピュータから接続してみてください. この時, 
8ビット, パリティなし, 1ストップ ビットで接続するようにしてください. 
接続後すぐにプロンプトが返ってこない場合や, 無意味な文字列が表示される
場合は, 1秒に1回くらいの割合で <tt>&lt;Enter&gt;</tt> キーを押してみて
ください. しばらくたって, なおも <tt/login:/ プロンプトが現れない場合
は, <tt>BREAK</tt> 信号を送信してみてください. この時, 端末側で使って
いるモデムが高速モデムならば, このモデムのインタフェースの接続速度を固
定してから, 再度ダイアル インしてみてください. (たとえば, USRobotics
Sportster の場合は, <tt>AT&amp;B1</tt>)

それでもまだ <tt/login:/ プロンプトが表示されない場合は, 
<tt>/etc/gettytab</tt> の以下の点について再度確認してみてください. 

<itemize>
<item> <tt>/etc/ttys</tt> の対応する行の 2番目の項目で, 
<tt>/etc/gettytab</tt> の中で定義されているエントリが指定されているか

<item> 各 <tt/nx=/ で <tt>/etc/gettytab</tt> の中で定義されているもの
が指定されているか

<item> 各 <tt/tc=/ で <tt>/etc/gettytab</tt> の中で定義されているもの
が指定されているか

</itemize>

もしダイアル インしても, FreeBSD システム側のモデムが応答しない場合は, 
FreeBSD 側のモデムが <tt/DTR/ がオンになった時に電話にでるように設定さ
れているかを確認してください. もしモデムの設定に問題がなさそうならば, 
モデムのインジケータ (がもしあれば) で, <tt/DTR/ がオンになっているか
を確認してください. 

この確認のステップを数回繰り返してもうまくいかない場合は, 一度休憩して, 
しばらくたってから挑戦してみましょう. それでもだめなら, おそらく
&a.questions にあなたのモデムについての情報と問題を書いたメールを送れ
ば, メーリング リストのメンバーが問題の解決を助けるべく努力してくれる
でしょう. 

<sect1><heading>謝辞</heading>
<p>

以下の方々から, 多くのコメントやアドバイスをいただきました. ここに謝意
を表します. 

<descrip>

<tag/Sean Kelly/ &lt;kelly@fsl.noaa.gov&gt; 多くのすばらしい助言をいた
だきました

</descrip>
