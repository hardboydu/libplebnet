For a normal CDROM or network installation, all you need to copy onto
actual floppies from this directory are the kern.flp and mfsroot.flp
images (for 1.44MB floppies).

Get two blank, freshly formatted floppies and image copy kern.flp
onto one and mfsroot.flp onto the other.  These images are NOT DOS
files!  You cannot simply copy them to a DOS or UFS floppy as
regular files, you need to "image" copy them to the floppy with
fdimage.exe under DOS (see the tools/ directory on your CDROM or
FreeBSD FTP mirror) or the `dd' command in UNIX.

For example:

To create the kern floppy image from DOS, you'd do something like
this:

C> fdimage kern.flp a:

Assuming that you'd copied fdimage.exe and kern.flp into a directory
somewhere.  You would do the same for mfsroot.flp, of course.

If you're creating the boot floppy from a UNIX machine, you may find
that:

        dd if=floppies/kern.flp of=/dev/rfd0

or

        dd if=floppies/kern.flp of=/dev/floppy

work well, depending on your hardware and operating system environment
(different versions of UNIX have totally different names for the
floppy drive - neat, huh? :-).

If you're on an ALPHA machine which can network-boot its floppy images
or you have a 2.88MB or LS-120 floppy capable of taking a 2.88MB image
on an x86 machine, you may still wish to use the older (but now
twice as large) boot.flp image which we also provide.  That contains
the contents of kern.flp and mfsroot.flp on a single floppy,
essentially.  This file should also be used as the boot file for those
mastering "El Torito" bootable CD images.  See the mkisofs(1) command
for more information.

Going to two installation boot floppies is a step we definitely
would have rather avoided but we simply no longer could due to
general code bloat and FreeBSD's many new device drivers in GENERIC.

One positive side-effect of this new organizational scheme, however,
is that it also allows one to easily make one's own kern or MFS
floppies should a need to customize some aspect of the installation
process or use a custom kernel for an otherwise unsupported piece of
hardware arise.  As long as the kernel is compiled with
``options MFS'' and ``options MFS_ROOT'', it will properly look for
and boot an mfsroot.flp image in memory when run (see how the
/boot/loader.rc file in kern.flp does its thing).  The mfsroot.flp
image is also just a gzip'd filesystem image which is used as root,
something which can be made rather easily using vnconfig(8).
If none of that makes any sense to you then don't worry about it -
just use the kern.flp and mfsroot.flp images as described above.
