#!/bin/sh
#	$Id: rc,v 1.51 1995/03/23 01:25:16 jkh Exp $
#	From: @(#)rc	5.27 (Berkeley) 6/5/91

# System startup script run by init on autoboot
# or after single-user.
# Output and error are redirected to console by init,
# and the console is the controlling terminal.

stty status '^T'

# Set shell to ignore SIGINT (2), but not children;
# shell catches SIGQUIT (3) and returns to single user after fsck.
trap : 2
trap : 3	# shouldn't be needed

HOME=/; export HOME
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH

swapon -a

if [ $1x = autobootx ]
then
	echo Automatic reboot in progress...
	fsck -p
	case $? in
	0)
		;;
	2)
		exit 1
		;;
	4)
		reboot
		echo "reboot failed... help!"
		exit 1
		;;
	8)
		echo "Automatic file system check failed... help!"
		exit 1
		;;
	12)
		echo "Reboot interrupted"
		exit 1
		;;
	130)
		# interrupt before catcher installed
		exit 1
		;;
	*)
		echo "Unknown error in reboot"
		exit 1
		;;
	esac
else
	echo Skipping disk checks ...
fi

trap "echo 'Reboot interrupted'; exit 1" 3

# root must be read/write both for NFS diskless and for VFS LKMs before
# proceeding any further.
mount -u -o rw /

umount -a >/dev/null 2>&1
mount -a -t nonfs

# If the machine runs wall CMOS clock (compatible with MSDOS),
# activate following line by creating empty file /etc/wall_cmos_clock
# If this file not exist, following line does nothing (assumed
# the machine runs UTC CMOS clock). See adjkerntz(8) for details.
adjkerntz -i

# If there is a global system configuration file, suck it in.
if [ -f /etc/sysconfig ]; then
	. /etc/sysconfig
fi

# configure serial devices
if [ -f /etc/rc.serial ]; then
	sh /etc/rc.serial
fi

# start up the network
if [ -f /etc/netstart ]; then
	sh /etc/netstart
fi

# Do system maintainance functions.
if [ -f /etc/rc.maint ]; then
	sh /etc/rc.maint
fi

# Now start up miscellaneous daemons that don't belong anywhere else
#
echo -n standard daemons:
echo -n ' cron';		cron
if [ "X${xtend}" != X"NO" -a -x /usr/libexec/xtend ]; then
 	echo -n ' xtend';   /usr/libexec/xtend
fi
echo -n ' printer';             lpd
echo '.'

mount -a -t nfs >/dev/null 2>&1 &	# XXX shouldn't need background

# Make shared lib searching a little faster.  Leave /usr/lib first if you
# add your own entries or you may come to grief.
if [ -x /sbin/ldconfig ]; then
	_LDC=/usr/lib
	if [ -d /usr/X11R6/lib ]; then _LDC="${_LDC} /usr/X11R6/lib" ; fi
	if [ -d /usr/X386/lib ]; then _LDC="${_LDC} /usr/X386/lib" ; fi
	if [ -d /usr/local/lib ]; then _LDC="${_LDC} /usr/local/lib" ; fi
	if [ -d /usr/gnu/lib ]; then _LDC="${_LDC} /usr/gnu/lib" ; fi
	echo 'setting ldconfig path:' ${_LDC}
	ldconfig ${_LDC}
fi

######################### Start Of Syscons Section #######################

kbdadjust=NO
[ "X${keymap}" != X"NO" -o "X${keyrate}" != X"NO" ] && kbdadjust=YES
vidadjust=NO
[ "X${scrnmap}" != X"NO" -o "X${font8x16}" != X"NO" -o \
	"X${font8x14}" != X"NO" -o "X${font8x8}" != X"NO" -o \
	"X${blanktime}" != X"NO" ] && vidadjust=YES

[ "X${kbdajust}" != X"NO" -o "X${vidajust}" != X"NO" -o \
	"X${saver}" != X"NO" ] && echo "starting syscons:"

[ "X${kbdajust}" != X"NO" ] && echo "kbdcontrol: "

# keymap
if [ "X${keymap}" != X"NO" ]; then
	echo -n "keymap "
	kbdcontrol -l ${keymap}
fi

# keyrate
if [ "X${keyrate}" != X"NO" ]; then
	echo -n "keyrate "
	kbdcontrol -r ${keyrate}
fi

[ "X${kbdajust}" != X"NO" ] && echo
[ "X${vidajust}" != X"NO" ] && echo "vidcontrol: "

# screen mapping
if [ "X${scrnmap}" != X"NO" ]; then
	echo -n "screen_map "
	vidcontrol -l ${scrnmap}
fi

# font 8x16
if [ "X${font8x16}" != X"NO" ]; then
	echo -n "font8x16 "
	vidcontrol -f 8x16 ${font8x16}
fi

# font 8x14
if [ "X${font8x14}" != X"NO" ]; then
	echo -n "font8x14 "
	vidcontrol -f 8x14 ${font8x14}
fi

# font 8x8
if [ "X${font8x8}" != X"NO" ]; then
	echo -n "font8x8 "
	vidcontrol -f 8x8 ${font8x8}
fi

# blank time
if [ "X${blanktime}" != X"NO" ]; then
	echo -n "blank_time "
	vidcontrol -t ${blanktime}
fi

[ "X${vidajust}" != X"NO" ] && echo

# screen saver
if [ "X${saver}" != X"NO" ] ; then
	echo -n "screensaver: "
	modstat | grep _saver || modload -u -o /tmp/saver_mod -e \
				 saver_init -q /lkm/${saver}_saver_mod.o
fi

######################### End Of Syscons Section #######################

# Do traditional (but rather obsolete) rc.local file if it exists.
if [ -f /etc/rc.local ]; then
	sh /etc/rc.local
fi

date
exit 0
