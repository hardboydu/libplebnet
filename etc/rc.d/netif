#!/bin/sh
#
# Copyright (c) 2003 The FreeBSD Project. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE PROJECT ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE PROJECT BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# $FreeBSD$
#

# PROVIDE: netif
# REQUIRE: atm1 ipfilter mountcritlocal pccard serial sppp sysctl tty
# KEYWORD: FreeBSD

. /etc/rc.subr
. /etc/network.subr

name="network"
start_cmd="network_start"
stop_cmd="network_stop"
cloneup_cmd="clone_up"
clonedown_cmd="clone_down"
extra_commands="cloneup clonedown"

network_start()
{
	# Create cloned interfaces
	clone_up

	# Create IPv6<-->IPv4 tunnels
	gif_up

	# Get a list of network interfaces. Do not include dhcp interfaces.
	_ifn_list="`list_net_interfaces nodhcp`"

	# Setup the supplied network interfaces including startup
	# scripts, if they exist.
	#
	for ifn in ${_ifn_list}; do
		ifscript_up ${ifn} && eval showstat_$ifn=1

		ifconfig_up ${ifn} && eval showstat_$ifn=1

		ifalias_up ${ifn} && eval showstat_$ifn=1

		ipx_up ${ifn} && eval showstat_$ifn=1
	done

	# Display interfaces configured by this script
	#
	for ifn in ${_ifn_list}; do
		eval showstat=\$showstat_${ifn}
		if [ ! -z ${showstat} ]; then
			ifconfig ${ifn}
		fi
	done

	# Resync ipfilter
	/etc/rc.d/ipfilter resync
}

network_stop()
{
	echo -n "Stopping network:"

	# flush routes
	route -n flush
	echo '.'
}

load_rc_config $name
run_rc_command "$1"
