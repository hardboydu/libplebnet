#!/bin/sh -
#
#	$Id: rc.alpha,v 1.2 1998/08/31 08:57:56 dfr Exp $
#	Do alpha specific processing
#

echo -n 'Initial rc.alpha initialization:'
echo '.'

##########################################################################
####### Syscons section						  ########
##########################################################################

# stdin must be redirected because it might be for a serial console
kbddev=/dev/ttyv0
viddev=/dev/ttyv0

echo -n "rc.alpha configuring syscons:"

# keymap
if [ "X${keymap}" != X"NO" ]; then
	echo -n ' keymap';	kbdcontrol <${kbddev} -l ${keymap}
fi

# keyrate
if [ "X${keyrate}" != X"NO" ]; then
	echo -n ' keyrate';	kbdcontrol <${kbddev} -r ${keyrate}
fi

# keybell
if [ "X${keybell}" != X"NO" ]; then
	echo -n ' keybell';	kbdcontrol <${kbddev} -b ${keybell}
fi

# change function keys
if [ "X${keychange}" != X"NO" ]; then
	echo -n " keychange"
	set - ${keychange}
	while [ $# -gt 0 ]
	do
		kbdcontrol <${kbddev} -f "$1" "$2"
		shift; shift
	done
fi

# cursor type
if [ "X${cursor}" != X"NO" ]; then
	echo -n ' cursor';	vidcontrol <${viddev} -c ${cursor}
fi

# screen mapping
if [ "X${scrnmap}" != X"NO" ]; then
	echo -n ' screen_map';	vidcontrol <${viddev} -l ${scrnmap}
fi

# font 8x16
if [ "X${font8x16}" != X"NO" ]; then
	echo -n ' font8x16';	vidcontrol <${viddev} -f 8x16 ${font8x16}
fi

# font 8x14
if [ "X${font8x14}" != X"NO" ]; then
	echo -n ' font8x14';	vidcontrol <${viddev} -f 8x14 ${font8x14}
fi

# font 8x8
if [ "X${font8x8}" != X"NO" ]; then
	echo -n ' font8x8';	vidcontrol <${viddev} -f 8x8 ${font8x8}
fi

# blank time
if [ "X${blanktime}" != X"NO" ]; then
	echo -n ' blank_time';	vidcontrol <${viddev} -t ${blanktime}
fi

# screen saver
if [ "X${saver}" != X"NO" ] ; then
	echo -n ' screensaver'
	for i in `kldstat | awk '$5 ~ "^splash_.*$" { print $5 }'`; do
		kldunload $i
	done
	kldstat -v | grep -q _saver || kldload ${saver}_saver
fi

# mouse daemon
if [ "X${moused_enable}" = X"YES" ] ; then
	echo -n ' moused'
	moused ${moused_flags} -p ${moused_port} -t ${moused_type}
	vidcontrol <${viddev} -m on
fi

# set this mode for all virtual screens
if [ "X${allscreens_flags}" != X"" ] ; then
	echo -n ' allscreens'
	for ttyv in /dev/ttyv*
	do
		vidcontrol <$ttyv ${allscreens_flags}
	done
fi
echo '.'
