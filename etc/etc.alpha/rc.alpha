#!/bin/sh -
#
# $FreeBSD$
#	Do alpha specific processing
#

echo -n 'Initial rc.alpha initialization:'

# Start the Alpha OSF/1 binary compatibility if requested.
#
case ${osf1_enable} in
[Yy][Ee][Ss])
	echo -n ' OSF/1';	osf1 > /dev/null 2>&1
	;;
esac

echo '.'

##########################################################################
####### Syscons section						  ########
##########################################################################

# stdin must be redirected because it might be for a serial console
kbddev=/dev/ttyv0
viddev=/dev/ttyv0

echo -n "rc.alpha configuring syscons:"

# keymap
#
case ${keymap} in
[Nn][Oo] | '')
	;;
*)
	echo -n ' keymap';	kbdcontrol <${kbddev} -l ${keymap}
	;;
esac

# keyrate
#
case ${keyrate} in
[Nn][Oo] | '')
        ;;
*)
	echo -n ' keyrate';	kbdcontrol <${kbddev} -r ${keyrate}
	;;
esac

# keybell
#
case ${keybell} in
[Nn][Oo] | '')
        ;;
*)
	echo -n ' keybell';	kbdcontrol <${kbddev} -b ${keybell}
	;;
esac

# change function keys
#
case ${keychange} in
[Nn][Oo] | '')
        ;;
*)
	echo -n " keychange"
	set - ${keychange}
	while [ $# -gt 0 ]; do
		kbdcontrol < ${kbddev} -f "$1" "$2"
		shift; shift
	done
	;;
esac

# cursor type
#
case ${cursor} in
[Nn][Oo] | '')
        ;;
*)
	echo -n ' cursor';	vidcontrol < ${viddev} -c ${cursor}
	;;
esac

# screen mapping
#
case ${scrnmap} in
[Nn][Oo] | '')
        ;;
*)
	echo -n ' screen_map';	vidcontrol < ${viddev} -l ${scrnmap}
	;;
esac

# font 8x16
#
case ${font8x16} in
[Nn][Oo] | '')
        ;;
*)
	echo -n ' font8x16';	vidcontrol < ${viddev} -f 8x16 ${font8x16}
	;;
esac

# font 8x14
#
case ${font8x14} in
[Nn][Oo] | '')
        ;;
*)
	echo -n ' font8x14';	vidcontrol < ${viddev} -f 8x14 ${font8x14}
	;;
esac

# font 8x8
#
case ${font8x8} in
[Nn][Oo] | '')
        ;;
*)
	echo -n ' font8x8';	vidcontrol < ${viddev} -f 8x8 ${font8x8}
	;;
esac

# blank time
#
case ${blanktime} in
[Nn][Oo] | '')
        ;;
*)
	echo -n ' blank_time';	vidcontrol < ${viddev} -t ${blanktime}
	;;
esac

# screen saver
#
case ${saver} in
[Nn][Oo] | '')
        ;;
*)
	echo -n ' screensaver'
	for i in `kldstat | awk '$5 ~ "^splash_.*$" { print $5 }'`; do
		kldunload $i
	done
	kldstat -v | grep -q _saver || kldload ${saver}_saver
	;;
esac

# mouse daemon
#
case ${moused_enable} in
[Yy][Ee][Ss])
	echo -n ' moused'
	moused ${moused_flags} -p ${moused_port} -t ${moused_type}
	vidcontrol < ${viddev} -m on
	;;
esac

# set this mode for all virtual screens
#
if [ -n "${allscreens_flags}" ] ; then
	echo -n ' allscreens'
	for ttyv in /dev/ttyv*; do
		vidcontrol < ${ttyv} ${allscreens_flags}
	done
fi

echo '.'

# knob for wether or not we should print out unaligned access warnings
#
case ${unaligned_print} in
[Nn][Oo])
       sysctl -w machdep.unaligned_print=0
       ;;
esac
