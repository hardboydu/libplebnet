#!/bin/sh
#
# Copyright (c) 2003-2004 Poul-Henning Kamp.
#
# See /usr/share/examples/etc/bsd-style-copyright for license terms.
#
# $FreeBSD$
#
# Called as:
#
# ${.CURDIR}/i386.diskimage $SECTS $HD $SC $DATASIZE \
#   $PRIROOTSLICE $ALTROOTSLICE $CFGSLICE \
#   ${.OBJDIR}/_.w ${.OBJDIR}/_.i [ ${.CURDIR}/cfgmaster ]
#
# XXX: newfs params.

set -ex

SECTS=$1
HD=$2
SC=$3
DATASIZE=$4
PRIROOTSLICE=$5
ALTROOTSLICE=$6
CFGSLICE=$7
WD=$8
IMG=$9
CFGMASTER=${10}

TMPFILE0=`mktemp -t nanobsd`
TMPFILE1=`mktemp -t nanobsd`
TMPMNT=`mktemp -d -t nanobsd`

make_fstab () {
  echo "/dev/$1 / ufs ro 1 1" > $2/etc/fstab
  ln -f $2/etc/fstab $2/conf/base/etc/fstab
}

get_label () {
  case "$1" in
    vol/*)
      echo -n "-L "; basename $1
      ;;
    *)
      echo ""
      ;;
  esac
}

PRIROOTLABEL=`get_label ${PRIROOTSLICE}`
ALTROOTLABEL=`get_label ${ALTROOTSLICE}`
CFGLABEL=`get_label ${CFGSLICE}`

# Attach MD device and prepare slices

dd if=/dev/zero of=${TMPFILE0} count=${SECTS}
MD=`mdconfig -a -t vnode -f ${TMPFILE0} -x ${SC} -y ${HD}`
rm -f ${TMPFILE0}
(
sl=`expr "(" ${SECTS} - ${SC} - ${DATASIZE} ")" / 2`
cyl=`expr ${SECTS} / ${SC} / ${HD}`
echo g c${cyl} h${HD} s${SC}
echo p 1 165 ${SC} $sl
echo p 2 165 `expr ${SC} + $sl` $sl
echo p 3 165 `expr ${SC} + $sl + $sl` ${DATASIZE}
) > ${TMPFILE1}
cat ${TMPFILE1}
fdisk -i -f ${TMPFILE1} ${MD}
fdisk ${MD}
boot0cfg -B -b ${WD}/boot/boot0sio -s 1 -m 3 ${MD}
rm -f ${TMPFILE1}
bsdlabel -w -B ${MD}s1

# Prepare primary root slice

newfs ${PRIROOTLABEL} -O1 -U ${MD}s1a
mount /dev/${MD}s1a ${TMPMNT}
(cd ${WD} && find . -print | cpio -dump ${TMPMNT}) || true
make_fstab ${PRIROOTSLICE} ${TMPMNT}
df ${TMPMNT}
umount ${TMPMNT}

# Prepare alternative root slice

dd if=/dev/${MD}s1 of=/dev/${MD}s2 bs=64k
if [ -n "${ALTROOTLABEL}" ]; then
  tunefs ${ALTROOTLABEL} /dev/${MD}s2a
fi
mount /dev/${MD}s2a ${TMPMNT}
make_fstab ${ALTROOTSLICE} ${TMPMNT}
umount ${TMPMNT}

# Prepare configuration slice

newfs ${CFGLABEL}  -O1 -U ${MD}s3
if [ -d "${CFGMASTER}" ]; then
  mount /dev/${MD}s3 ${TMPMNT}
  ( cd ${CFGMASTER} && find . -print | cpio -dumpl ${TMPMNT} )
  umount ${TMPMNT}
fi

# Create flash images

dd if=/dev/${MD} of=${IMG} bs=64k
dd if=/dev/${MD}s1 of=${IMG}.s1 bs=64k

# Detach MD device

mdconfig -d -u ${MD}
