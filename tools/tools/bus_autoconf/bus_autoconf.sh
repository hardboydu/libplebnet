#!/bin/sh
#
# $FreeBSD$
#
# Copyright (c) 2011 Hans Petter Selasky. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

OS=FreeBSD
DOLLAR=$

cleanup()
{
   # Cleanup
   rm -f usb_dual.ids
   rm -f usb_host.ids
   rm -f usb_device.ids
}

usb_format()
{
    [ -f ${1} ] || return

    # Split into one and one record
    split -b 32 ${1} ${1}.

    # Prefix each record by the module name
    for G in $(ls ${1}.*)
    do
      printf "%-32s" ${3} >> ${2}
      cat ${G} >> ${2}
      rm -f ${G}
    done
}

cat <<EOF
#
# ${DOLLAR}${OS}${DOLLAR}
#
# This file was automatically generated by "tools/bus_autoconf.sh".
# Please do not edit!
#

EOF

# Cleanup
cleanup

for F in $*
do

# Get module basename
H=$(basename ${F} | sed -e "s/\.ko//g")

# USB Host
objcopy -j usb_host_id -O binary ${F} temp.ids 2> /dev/null
usb_format temp.ids usb_host.ids ${H}

# USB Device
objcopy -j usb_device_id -O binary ${F} temp.ids 2> /dev/null
usb_format temp.ids usb_device.ids ${H}

# USB Dual mode
objcopy -j usb_dual_id -O binary ${F} temp.ids 2> /dev/null
usb_format temp.ids usb_dual.ids ${H}

done

# Dump all data
[ -f usb_dual.ids ] && bus_autoconf -i usb_dual.ids -t usb_dual
[ -f usb_host.ids ] && bus_autoconf -i usb_host.ids -t usb_host
[ -f usb_device.ids ] && bus_autoconf -i usb_device.ids -t usb_device

# Cleanup
cleanup
