.\" Copyright (c) 1993 University of Utah.
.\" Copyright (c) 1980, 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\" Copyright (c) 2000
.\"	Poul-Henning Kamp  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Systems Programming Group of the University of Utah Computer
.\" Science Department.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)vnconfig.8	8.1 (Berkeley) 6/5/93
.\" from: src/usr.sbin/vnconfig/vnconfig.8,v 1.19 2000/12/27 15:30:29
.\"
.\" $FreeBSD$
.\"
.Dd December 31, 2000
.Dt MDCONFIG 8
.Os FreeBSD
.Sh NAME
.Nm mdconfig
.Nd configure and enable memory disks
.Sh SYNOPSIS
.Nm
.Fl a
.Fl t Ar type 
.Oo
.Fl o
.Oo Cm no Oc Ns Ar option
.Oc
.Op Fl b Ar baseaddress
.Op Fl s Ar size
.Op Fl f Ar file
.Op Fl u Ar unit
.Nm
.Fl d
.Fl u Ar unit
.Sh DESCRIPTION
The
.Nm
command configures and enables 
.Xr md 4
devices.
.Pp
Options indicate an action to be performed:
.Bl -tag -width indent
.It Fl a
Attach a memory disk.
This will configure and attach a memory disk with the
parameters specified and attach it to the system.
.It Fl d
Detach a memory disk from the system and release all resources.
.It Fl t Ar type 
Select the type of the memory disk.
.Bl -tag -width "preload"
.It Cm malloc
Storage for this type of memory disk is allocated with
.Xr malloc 9 .
This limits the size to the malloc bucket limit in the kernel.
.It Cm preload
This type represents memory disks which are backed by memory outside
the kernels normal address space.
These can be instantiated automatically by objects loaded by the
bootloader or configured on the fly.
.It Cm vnode
A file specified with 
.Fl f Ar file
becomes the backingstore for this memory disk.
.It Cm swap
swapspace is used to back this memory disk.
.El
.It Fl b Ar baseaddress
Starting address in kernel virtual space of the memory to be used for a
.Cm preload
type disk.
.It Fl f Ar file
Filename to use for the vnode type memory disk.
.It Fl s Ar size
Size of the memory disk.
.Ar Size
is the number of 512 bytes sectors unless suffixed with a
.Cm k , m ,
or
.Cm g
which
denotes kilobyte, megabyte and gigabyte respectively.
.It Xo
.Fl o Oo Cm no Oc Ns Ar option
.Xc
Set or reset options.
.Bl -tag -width indent
.It Xo
.Oo Cm no Oc Ns Cm reserve
.Xc
Allocate and reserve all needed storage from the start, rather than as needed.
.It Xo
.Oo Cm no Oc Ns Cm cluster
.Xc
Enable clustering on this disk.
.It Xo
.Oo Cm no Oc Ns Cm autounit
.Xc
Automatically allocate the next free unit number for this disk.
The basename of the disk is printed on stdout.
.It Xo
.Oo Cm no Oc Ns Cm compress
.Xc
Enable/Disable compression features to reduce memory usage.
.It Xo
.Oo Cm no Oc Ns Cm readonly
.Xc
Enable/Disable readonly mode.
.El
.It Fl u Ar unit
Force the
.Xr md 4
device to use a specific unit number.
.El
.Sh EXAMPLES
To create a 4 megabyte
.Xr malloc 9
backed memory disk.
The name of the allocated unit will be output on stdout like
.Dq Li md3 :
.Pp
.Dl mdconfig -a -t malloc -s 4m
.Pp
To create a disk named
.Pa /dev/md4
with
.Pa /tmp/boot.flp
as backing:
.Pp
.Dl mdconfig -a -t vnode -f /tmp/boot.flp -u 4
.Pp
To detach and free all resources used by
.Pa /dev/md4 :
.Pp
.Dl mdconfig -d -u 4
.Pp
To create and mount a 128MByte swap backed filesystem on
.Pa /tmp :
.Bd -literal -offset indent
mdconfig -a -t swap -s 128M -u 10
disklabel -r -w md10 auto
newfs /dev/md10c
tunefs -n enable /dev/md10c
mount /dev/md10c /tmp
chmod 1777 /tmp
.Ed
.Pp
It is practically impossible to give a universal example of the
.Cm preload
type of disk, it is mainly useful in the embedded systems market,
but to give a feel for how it works:
On most standard PC architecture machines this will create a disk
backed by the BIOS ROM:
.Pp
.Dl mdconfig -a -t preload -s 128k -b 0xc00fe000
.Sh SEE ALSO
.Xr md 4 ,
.Xr disklabel 8 ,
.Xr fdisk 8 ,
.Xr malloc 9
