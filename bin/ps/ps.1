.\" Copyright (c) 1980, 1990, 1991, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)ps.1	8.3 (Berkeley) 4/18/94
.\" $FreeBSD$
.\"
.Dd March 27, 2004
.Dt PS 1
.Os
.Sh NAME
.Nm ps
.Nd process status
.Sh SYNOPSIS
.Nm
.Op Fl aCcefHhjlmrSTuvwXxZ
.Oo Fl G Ar gid Ns Xo
.Op , Ns Ar gid Ns No ...
.Xc
.Oc
.Op Fl M Ar core
.Op Fl N Ar system
.Op Fl O Ar fmt
.Op Fl o Ar fmt
.Oo Fl p Ar pid Ns Xo
.Op , Ns Ar pid Ns No ...
.Xc
.Oc
.Oo Fl t Ar tty Ns Xo
.Op , Ns Ar tty Ns No ...
.Xc
.Oc
.Oo Fl U Ar username Ns Xo
.Op , Ns Ar username Ns No ...
.Xc
.Oc
.Nm
.Op Fl L
.Sh DESCRIPTION
The
.Nm
utility
displays a header line, followed by lines containing information about
all of your
processes that have controlling terminals.
.Pp
A different set of processes can be selected for display by using any
combination of the
.Fl a, G , p , T , t
and
.Fl U
options.
If more than one of these options are given, then
.Nm
will select all processes which are matched by at least one of the
given options.
.Pp
For the processes which have been selected for display,
.Nm
will usually display one line per process.
The
.Fl H
option may result in multiple output lines (one line per thread) for
some processes.
By default all of these output lines are sorted first by controlling
terminal, then by process
.Tn ID .
The
.Fl m, r, u,
and
.Fl v
options will change the sort order.
If more than one sorting option was given, then the selected processes
will be sorted by the last sorting option which was specified.
.Pp
For the processes which have been selected for display, the information
to display is selected based on a set of keywords (see the
.Fl L
.Fl O
and
.Fl o
options).
The default output format includes, for each process, the process'
.Tn ID ,
controlling terminal, cpu time (including both user and system time),
state, and associated command.
.Pp
The process file system (see
.Xr procfs 5 )
should be mounted when
.Nm
is executed, otherwise not all information will be available.
.Pp
The options are as follows:
.Bl -tag -width indent
.It Fl a
Display information about other users' processes as well as your own.
This will skip any processes which do not have a controlling teminal,
unless the
.Fl x
option is also specified.
This can be disabled by setting the
.Va security.bsd.see_other_uids
sysctl to zero.
.It Fl c
Change the ``command'' column output to just contain the executable name,
rather than the full command line.
.It Fl C
Change the way the cpu percentage is calculated by using a ``raw''
cpu calculation that ignores ``resident'' time (this normally has
no effect).
.It Fl e
Display the environment as well.
.It Fl f
Show commandline and environment information about swapped out processes.
This option is honored only if the uid of the user is 0.
.It Fl G
Display information about processes which are running with the specified
real group
.Tn ID(s) .
.It Fl H
Show all of the
.Em kernel visible
threads associated with each process.  Depending on the threading package that
is in use, this may show only the process, only the kernel scheduled entities,
or all of the process threads.
.It Fl h
Repeat the information header as often as necessary to guarantee one
header per page of information.
.It Fl j
Print information associated with the following keywords:
user, pid, ppid, pgid, jobc, state, tt, time and command.
.It Fl L
List the set of keywords available for the
.Fl O
and
.Fl o
options.
.It Fl l
Display information associated with the following keywords:
uid, pid, ppid, cpu, pri, nice, vsz, rss, mwchan, state, tt, time
and command.
.It Fl M
Extract values associated with the name list from the specified core
instead of the currently running system.
.It Fl m
Sort by memory usage, instead of the combination of controlling
terminal and process
.Tn ID .
.It Fl N
Extract the name list from the specified system instead of the default,
which is the kernel image the system has booted from.
.It Fl O
Add the information associated with the space or comma separated list
of keywords specified, after the process
.Tn ID ,
in the default information
display.
Keywords may be appended with an equals (``='') sign and a string.
This causes the printed header to use the specified string instead of
the standard header.
.It Fl o
Display information associated with the space or comma separated
list of keywords specified.
Multiple keywords may also be given in the form of more than one
.Fl o
option.
Keywords may be appended with an equals (``='') sign and a string.
This causes the printed header to use the specified string instead of
the standard header.
.It Fl p
Display information about processes which match the specified process
.Tn ID(s) .
.It Fl r
Sort by current cpu usage, instead of the combination of controlling
terminal and process
.Tn ID .
.It Fl S
Change the way the process time is calculated by summing all exited
children to their parent process.
.It Fl T
Display information about processes attached to the device associated
with the standard input.
.It Fl t
Display information about processes attached to the specified terminal
device(s).
.It Fl U
Display the processes belonging to the specified
.Ar username Ns (s) .
.It Fl u
Display information associated with the following keywords:
user, pid, %cpu, %mem, vsz, rss, tt, state, start, time and command.
The
.Fl u
option implies the
.Fl r
option.
.It Fl v
Display information associated with the following keywords:
pid, state, time, sl, re, pagein, vsz, rss, lim, tsiz,
%cpu, %mem and command.
The
.Fl v
option implies the
.Fl m
option.
.It Fl w
Use 132 columns to display information, instead of the default which
is your window size.
If the
.Fl w
option is specified more than once,
.Nm
will use as many columns as necessary without regard for your window size.
.It Fl X
When displaying processes matched by other options, skip any processes
which do not have a controlling terminal.
.It Fl x
When displaying processes matched by other options, include processes
which do not have a controlling terminal.
This is the opposite of the
.Fl X
option.
If both
.Fl X
and
.Fl x
are specified in the same command, then
.Nm
will use the one which was specified last.
.It Fl Z
Add label to the list of keywords for which
.Nm
will display information.
.El
.Pp
A complete list of the available keywords are listed below.
Some of these keywords are further specified as follows:
.Bl -tag -width lockname
.It %cpu
The cpu utilization of the process; this is a decaying average over up to
a minute of previous (real) time.
Since the time base over which this is computed varies (since processes may
be very young) it is possible for the sum of all
.Tn \&%CPU
fields to exceed 100%.
.It %mem
The percentage of real memory used by this process.
.It flags
The flags associated with the process as in
the include file
.In sys/proc.h :
.Bl -column P_STOPPED_SINGLE 0x4000000
.It Dv "P_ADVLOCK" Ta No "0x00001	Process may hold a POSIX advisory lock"
.It Dv "P_CONTROLT" Ta No "0x00002	Has a controlling terminal"
.It Dv "P_KTHREAD" Ta No "0x00004	Kernel thread"
.It Dv "P_NOLOAD" Ta No "0x00008	Ignore during load avg calculations"
.It Dv "P_PPWAIT" Ta No "0x00010	Parent is waiting for child to exec/exit"
.It Dv "P_PROFIL" Ta No "0x00020	Has started profiling"
.It Dv "P_STOPPROF" Ta No "0x00040	Has thread in requesting to stop prof"
.It Dv "P_SUGID" Ta No "0x00100		Had set id privileges since last exec"
.It Dv "P_SYSTEM" Ta No "0x00200	System proc: no sigs, stats or swapping"
.It Dv "P_SINGLE_EXIT" Ta No "0x00400	Threads suspending should exit, not wait"
.It Dv "P_TRACED" Ta No "0x00800	Debugged process being traced"
.It Dv "P_WAITED" Ta No "0x01000	Someone is waiting for us"
.It Dv "P_WEXIT" Ta No "0x02000		Working on exiting"
.It Dv "P_EXEC" Ta No "0x04000		Process called exec"
.It Dv "P_SA" Ta No "0x08000		Using scheduler activations"
.It Dv "P_CONTINUED" Ta No "0x10000	Proc has continued from a stopped state"
.It Dv "P_STOPPED_SIG" Ta No "0x20000	Stopped due to SIGSTOP/SIGTSTP"
.It Dv "P_STOPPED_TRACE" Ta No "0x40000	Stopped because of tracing"
.It Dv "P_STOPPED_SINGLE" Ta No "0x80000	Only one thread can continue"
.It Dv "P_PROTECTED" Ta No "0x100000	Do not kill on memory overcommit"
.It Dv "P_SIGEVENT" Ta No "0x200000	Process pending signals changed"
.It Dv "P_JAILED" Ta No "0x1000000	Process is in jail"
.It Dv "P_INEXEC" Ta No "0x4000000	Process is in execve()"
.El
.It label
The MAC label of the process.
.It lim
The soft limit on memory used, specified via a call to
.Xr setrlimit 2 .
.It lstart
The exact time the command started, using the ``%c'' format described in
.Xr strftime 3 .
.It lockname
The name of the lock that the process is currently blocked on.
If the name is invalid or unknown, then
.Dq ???\&
is displayed.
.It mwchan
The event name if the process is blocked normally, or the lock name if
the process is blocked on a lock.
See the wchan and lockname keywords
for details.
.It nice
The process scheduling increment (see
.Xr setpriority 2 ) .
.It rss
the real memory (resident set) size of the process (in 1024 byte units).
.It start
The time the command started.
If the command started less than 24 hours ago, the start time is
displayed using the ``%l:ps.1p'' format described in
.Xr strftime 3 .
If the command started less than 7 days ago, the start time is
displayed using the ``%a6.15p'' format.
Otherwise, the start time is displayed using the ``%e%b%y'' format.
.It state
The state is given by a sequence of characters, for example,
.Dq Tn RWNA .
The first character indicates the run state of the process:
.Pp
.Bl -tag -width indent -compact
.It D
Marks a process in disk (or other short term, uninterruptible) wait.
.It I
Marks a process that is idle (sleeping for longer than about 20 seconds).
.It L
Marks a process that is waiting to acquire a lock.
.It R
Marks a runnable process.
.It S
Marks a process that is sleeping for less than about 20 seconds.
.It T
Marks a stopped process.
.It W
Marks an idle interrupt thread.
.It Z
Marks a dead process (a ``zombie'').
.El
.Pp
Additional characters after these, if any, indicate additional state
information:
.Pp
.Bl -tag -width indent -compact
.It +
The process is in the foreground process group of its control terminal.
.It <
The process has raised
.Tn CPU
scheduling priority.
.It E
The process is trying to exit.
.It J
Marks a process which is in
.Xr jail 2 .
The hostname of the prison can be found in
.Ql /proc/<pid>/status .
.It L
The process has pages locked in core (for example, for raw
.Tn I/O ) .
.It N
The process has reduced
.Tn CPU
scheduling priority (see
.Xr setpriority 2 ) .
.It s
The process is a session leader.
.It V
The process is suspended during a
.Xr vfork 2 .
.It W
The process is swapped out.
.It X
The process is being traced or debugged.
.El
.It tt
An abbreviation for the pathname of the controlling terminal, if any.
The abbreviation consists of the three letters following
.Pa /dev/tty ,
or, for the console, ``con''.
This is followed by a ``-'' if the process can no longer reach that
controlling terminal (i.e., it has been revoked).
.It wchan
The event (an address in the system) on which a process waits.
When printed numerically, the initial part of the address is
trimmed off and the result is printed in hex, for example, 0x80324000 prints
as 324000.
.El
.Pp
When printing using the command keyword, a process that has exited and
has a parent that has not yet waited for the process (in other words, a zombie)
is listed as ``<defunct>'', and a process which is blocked while trying
to exit is listed as ``<exiting>''.
The
.Nm
utility
makes an educated guess as to the file name and arguments given when the
process was created by examining memory or the swap area.
The method is inherently somewhat unreliable and in any event a process
is entitled to destroy this information, so the names cannot be depended
on too much.
The ucomm (accounting) keyword can, however, be depended on.
.Sh KEYWORDS
The following is a complete list of the available keywords and their
meanings.
Several of them have aliases (keywords which are synonyms).
.Pp
.Bl -tag -width sigignore -compact
.It %cpu
percentage cpu usage (alias pcpu)
.It %mem
percentage memory usage (alias pmem)
.It acflag
accounting flag (alias acflg)
.It args
command and arguments
.It comm
command
.It command
command and arguments
.It cpu
short-term cpu usage factor (for scheduling)
.It etime
elapsed running time
.It flags
the process flags, in hexadecimal (alias f)
.It inblk
total blocks read (alias inblock)
.It jobc
job control count
.It ktrace
tracing flags
.It label
MAC label
.It lim
memoryuse limit
.It logname
login name of user who started the process
.It lstart
time started
.It majflt
total page faults
.It minflt
total page reclaims
.It msgrcv
total messages received (reads from pipes/sockets)
.It msgsnd
total messages sent (writes on pipes/sockets)
.It lockname
lock currently blocked on (as a symbolic name)
.It mwchan
wait channel or lock currently blocked on
.It nice
nice value (alias ni)
.It nivcsw
total involuntary context switches
.It nsigs
total signals taken (alias nsignals)
.It nswap
total swaps in/out
.It nvcsw
total voluntary context switches
.It nwchan
wait channel (as an address)
.It oublk
total blocks written (alias oublock)
.It paddr
swap address
.It pagein
pageins (same as majflt)
.It pgid
process group number
.It pid
process
.Tn ID
.It poip
pageouts in progress
.It ppid
parent process
.Tn ID
.It pri
scheduling priority
.It re
core residency time (in seconds; 127 = infinity)
.It rgid
real group
.Tn ID
.It rgroup
group name (from rgid)
.It rlink
reverse link on run queue, or 0
.It rss
resident set size
.It rtprio
realtime priority (101 = not a realtime process)
.It ruid
real user
.Tn ID
.It ruser
user name (from ruid)
.It sid
session
.Tn ID
.It sig
pending signals (alias pending)
.It sigcatch
caught signals (alias caught)
.It sigignore
ignored signals (alias ignored)
.It sigmask
blocked signals (alias blocked)
.It sl
sleep time (in seconds; 127 = infinity)
.It start
time started
.It state
symbolic process state (alias stat)
.It svgid
saved gid from a setgid executable
.It svuid
saved uid from a setuid executable
.It tdev
control terminal device number
.It time
accumulated cpu time, user + system (alias cputime)
.It tpgid
control terminal process group
.Tn ID
.\".It trss
.\"text resident set size (in Kbytes)
.It tsid
control terminal session
.Tn ID
.It tsiz
text size (in Kbytes)
.It tt
control terminal name (two letter abbreviation)
.It tty
full name of control terminal
.It uprocp
process pointer
.It ucomm
name to be used for accounting
.It uid
effective user
.Tn ID
.It upr
scheduling priority on return from system call (alias usrpri)
.It user
user name (from uid)
.It vsz
virtual size in Kbytes (alias vsize)
.It wchan
wait channel (as a symbolic name)
.It xstat
exit or stop status (valid only for stopped or zombie process)
.El
.Sh ENVIRONMENT
The following environment variables affect the execution of
.Nm :
.Bl -tag -width ".Ev COLUMNS"
.It Ev COLUMNS
If set, specifies the user's preferred output width in column positions.
By default,
.Nm
attempts to automatically determine the terminal width.
.El
.Sh FILES
.Bl -tag -width ".Pa /boot/kernel/kernel" -compact
.It Pa /dev/lomac
interface used to query the
.Xr lomac 4
KLD
.It Pa /boot/kernel/kernel
default system namelist
.It Pa /proc
the mount point of
.Xr procfs 5
.El
.Sh SEE ALSO
.Xr kill 1 ,
.Xr w 1 ,
.Xr kvm 3 ,
.Xr strftime 3 ,
.Xr lomac 4 ,
.Xr procfs 5 ,
.Xr pstat 8 ,
.Xr sysctl 8 ,
.Xr mutex 9
.Sh STANDARDS
For historical reasons,
.Nm
utility under
.Fx
supports a different set of options from what is described by
.St -p1003.2 ,
and what is supported on non-BSD operating systems.
.Sh HISTORY
The
.Nm
command appeared in
.At v4 .
.Sh BUGS
Since
.Nm
cannot run faster than the system and is run as any other scheduled
process, the information it displays can never be exact.
.Pp
The
.Nm
utility does not correctly display argument lists containing multibyte
characters.
