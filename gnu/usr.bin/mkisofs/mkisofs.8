.\" -*- nroff -*-
.TH MKISOFS 8 "August 1993" "Version 1.03"
.SH NAME
mkisofs \- create a iso9660  filesystem with optional Rock Ridge attributes.
.SH SYNOPSIS
.B mkisofs
[
.B \-R
]
[
.B \-T
]
[
.B \-v
]
[
.B \-z
]
[
.B \-a
]
[
.B \-f
]
[
.B \-d
]
[
.B \-D
]
[
.B \-l
]
[
.B \-V
]
[
.B \-V
.I volid
]
[
.B \-p
.I preparer
]
[
.B \-P
.I publisher
]
[
.B \-A
.I application_id
]
[
.B \-x
.I path
]
.B \-o
.I filename
.I path
.SH DESCRIPTION
.B mkisofs
is effectively a pre-mastering program to generate the iso9660 filesystem -  it
takes a snapshot of a given directory tree, and generates a binary image which
will correspond to an iso9660 filesystem when written to a block device.
.PP
.B mkisofs
is also capable of generating the System Use Sharing Protocol records specified
by the Rock Ridge Interchange Protocol.  This is used to further describe the
files in the iso9660 filesystem to a unix host, and provides information such
as longer filenames, uid/gid, posix permissions, and block and character
devices.
.PP
Each file written to the iso9660 filesystem must have a filename in the 8.3
format (8 characters, period, 3 characters, all upper case), even if Rock Ridge
is in use.  This filename is used on systems that are not able to make use of
the Rock Ridge extensions (such as MS-DOS), and each filename in each directory
must be different from the other filenames in the same directory.
.B mkisofs
generally tries to form correct names by forcing the unix filename to upper
case and truncating as required, but often times this yields unsatisfactory
results when there are  cases where the
truncated names are  not  all unique. 
.B mkisofs
assigns weightings to each filename, and if two names that are otherwise the
same are found the name with the lower priority is renamed  to have a 3 digit
number as an extension (where the number is guaranteed to be unique).  An
example of this would be the files foo.bar and
foo.bar.~1~ - the file foo.bar.~1~ would be  written  as FOO.000;1 and the file
foo.bar would be written as  FOO.BAR;1
.PP
.br
.B path
is the path of the directory tree to be copied into the iso9660 filesystem.
.SH OPTIONS
.TP
.I -a
Include all files on the iso9660 filesystem.  Normally files that contain the
characters '~' or '#' will not be included (these are typically backup files
for editors under unix).
.TP
.I -A application_id
Specifies a text string that will be written into the volume header.
This should describe the application that will be on the disc.  There
is space on the disc for 128 characters of information.  This parameter can
also be set in the file .mkisofsrc with APPL=id.  If specified in both
places, the command line version is used.
.TP
.I -d
Omit trailing period from files that do not have a period.  This violates the
ISO9660 standard, but it happens to work on many systems.  Use with caution.
.TP
.I -D
Do not use deep directory relocation, and instead just pack them in the
way we see them.  This violates the ISO9660 standard, but it works on many
systems.  Use with caution.
.TP
.I -f
Follow symbolic links when generating the filesystem.  When this option is not
in use, symbolic links will be entered using Rock Ridge if enabled, otherwise
the file will be ignored.
.TP
.I -l
Allow full 32 character filenames.  Normally the ISO9660 filename will be in an
8.3 format which is compatible with MS-DOS, even though the ISO9660 standard
allows filenames of up to 32 characters.  If you use this option, the disc may
be difficult to use on a MS-DOS system, but this comes in handy on some other
systems (such as the Amiga).  Use with caution.
.TP
.I -N
Omit version numbers from ISO9660 file names.  This may violate the ISO9660
standard, but no one really uses the version numbers anyway.  Use with caution.
.TP
.I -o filename
is the name of the file to which the iso9660 filesystem image should be
written.  This can be a disk file, a tape drive, or it can correspond directly
to the device name of the optical disc writer.  If not specified, stdout is
]used.  Note that the output can also be a block special device for a regular
disk  drive, in which case  the disk partition can be mounted  and examined to
ensure that the premastering was done correctly.
.TP
.I -P publisher_id
Specifies a text string that will be written into the volume header.
This should describe the publisher of the CDROM, usually with a
mailing address and phone number.  There is space on the disc for 128
characters of information.  This parameter can also be set in the file
.mkisofsrc with PUBL=.  If specified in both places, the command line
version is used.
.TP
.I -p preparer_id
Specifies a text string that will be written into the volume header.
This should describe the preparer of the CDROM, usually with a mailing
address and phone number.  There is space on the disc for 128
characters of information.  This parameter can also be set in the file
.mkisofsrc with PREP=.  If specified in both places, the command
line version is used.
.TP
.I -R
Generate SUSP and RR records using the Rock Ridge protocol to further describe
the files on the iso9660 filesystem.
.TP
.I -T
Generate a file TRANS.TBL in each directory on the CDROM, which can be used
on non-Rock Ridge capable systems to help establish the correct file names.
There is also information present in the file that indicates the major and
minor numbers for block and character devices, and each symlink has the name of
the link file given.
.TP
.I -V volid
Specifies the volume ID to be written into the master block.  This
parameter can also be set in the file .mkisofsrc with VOLI=id.  If
specified in both places, the command line version is used.
.TP
.I -v
Verbose execution.
.TP
.I -x path
Exclude 
.I path
from being written to CDROM. 
.I path
must be the complete pathname that results from concatenating the pathname
given as command line argument and the path relative to this directory.
Multiple paths may be excluded (up to 1000).
Example: 

mkisofs -o cd -x /local/dir1 -x /local/dir2 /local
.TP
.I -z
Generate special SUSP records for transparently compressed files.  This is
only of use and interest for hosts that support transparent decompression.
This is an experimental feature, and no hosts yet support this, but there
are ALPHA patches for linux that can make use of this feature.
.SH CONFIGURATION
.B mkisofs
looks for a file .mkisofsrc, first in the current working directory, and if not
found there then in the directory in which the
.B mkisofs
binary is stored.  This file is assumed to contain a series of lines
of the form "TAG=value", and in this way you can specify certain
options.  Only the first four characters of the tag are used, and the
case of the tag is not significant.  Some fields in the volume header
are not settable on the command line, but can be altered through this
facility.  These are the copyright information (COPY), the
bibliographic information (BIBL), the abstract (ABST), the volume set
ID (VOLS) and the system ID (SYSI).
.PP
.B mkisofs
can also be configured at compile time with defaults for many of these fields.
See the file defaults.h.
.SH AUTHOR
.B mkisofs
is not based on the standard mk*fs tools for unix, because we must generate
a complete  copy of an existing filesystem on a disk in the  iso9660
filesystem.   The  name mkisofs  is probably a bit of a misnomer, since it
not only creates the filesystem, but it also populates it as well.
.PP
.br
Eric Youngdale <ericy@cais.com> wrote both the linux isofs9660 filesystem
and the mkisofs utility, and is currently maintaining them.  The copyright for
the mkisofs utility is held by Yggdrasil Computing, Incorporated.
.SH BUGS
Any files that have hard links to files not in the tree being copied to the
iso9660 filessytem will have an incorrect file reference count.
.PP
There may be some other ones.  Please, report them to the author.
.SH FUTURE IMPROVEMENTS
Allow specfication of multiple paths on the command line to be included in
iso9660 filesystem.  Can be tricky - directory entries in the root directory
need to be properly sorted.
.SH AVAILABILITY
.B mkisofs
is available for anonymous ftp from tsx-11.mit.edu in
/pub/linux/BETA/cdrom/mkisofs and many other mirror sites.  With the 1.0
release, it is no longer considered to be in beta testing.  Most of the bugs
that are being discovered now are very minor (and interestingly enough also
seem to be present in the YM software).  Reports indicate that people are
gearing up for production runs using version 1.00.
