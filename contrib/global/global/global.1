.\"
.\" Copyright (c) 1996, 1997 Shigio Yamaguchi. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Shigio Yamaguchi.
.\" 4. Neither the name of the author nor the names of any co-contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd April 21, 1997
.Dt GLOBAL 1
.Os BSD 4
.Sh NAME
.Nm global
.Nd print the locations of specified function.
.Sh SYNOPSIS
.Nm global
.Op Fl arx
.Ar name
.Nm global -c
.Op Ar name
.Nm global
.Op Fl a
.Fl f
.Ar file
.Sh DESCRIPTION
.Nm Global
find the locations of specified function in C and Yacc source files.
.Nm Global
can treat a source tree, that is, a directory that has subdirectories and
source files.
You can get the relative path of objects from anywhere within the tree.

.Nm Global
can locate not only function definitions but also function references and
allow duplicate entries too.
.Pp
In advance of using this command, you must execute
.Xr gtags 1
at the root directory of the source tree.
.Pp
The following options are available:
.Bl -tag -width Ds
.It Fl a
print absolute path name. By default, print relative path name.
.It Fl c Op Ar name
print candidate function names which start with specified
.Ar name .
If
.Ar name
is not specified, print all function names.
.It Fl f Ar file
print all function definitions in the
.Ar file .
This option implies -x option.
.It Fl r
print the locations of function references. By default, print function
definitions.
.It Fl x
In addition to the default output, produce the line number and
the line contents.
.It Ar name
function name. It can include perl's regular expression.
.Sh FILES
.Bl -tag -width tags -compact
.It Pa GTAGS
tags file for function definitions.
.It Pa GRTAGS
tags file for function references.
.El
.Sh ENVIRONMENT
The following environment variables affect the execution of global.
.Pp
.Bl -tag -width indent
.It Ev GTAGSROOT
The directory which is the root of source tree.
.It Ev GTAGSDBPATH
The directory on which gtags database exist. This value is ignored
when GTAGSROOT is not defined.
.It Ev GTAGSLIBPATH
If this variable is set, its value is used as the path to search for library
functions. If specified function is not found in a source tree,
global search in these path too.
.Sh EXAMPLES

  % ls -F
  Makefile	src/	lib/	
  % gtags
  % global main
  src/main.c
  % global -x main
  main              10 src/main.c  main (argc, argv) {
  % global -x '^[sg]et'
  set_num           20 lib/util.c  set_num(values)
  get_num           30 lib/util.c  get_num() {
  % global -rx '^[sg]et'
  set_num          113 src/op.c            set_num(32);
  set_num          225 src/opop.c               if (set_num(0) > 0) {
  get_num           90 src/op.c            while (get_num() > 0) {
  % cd lib
  % global -rx '^[sg]et'
  set_num          113 ../src/op.c            set_num(32);
  set_num          225 ../src/opop.c               if (set_num(0) > 0) {
  get_num           90 ../src/op.c            while (get_num() > 0) {
  % global strlen
  % (cd /usr/src/sys; gtags)
  % setenv GTAGSLIBPATH /usr/src/sys
  % global strlen
  ../../../usr/src/sys/libkern/strlen.c
  % (cd /usr/src/lib; gtags)
  % setenv GTAGSLIBPATH /usr/src/lib:/usr/src/sys
  % global strlen
  ../../../usr/src/lib/libc/string/strlen.c

.Sh DIAGNOSTICS
.Nm Global
exits with a non 0 value if an error occurred, 0 otherwise.
.Sh SEE ALSO
.Xr btreeop 1 ,
.Xr gctags 1 ,
.Xr gtags 1 ,
.Xr htags 1 .
.Sh AUTHORS
Shigio Yamaguchi (shigio@wafu.netgate.net)
.Sh HISTORY
The
.Nm
command appeared in FreeBSD 2.2.
