*** ip_output.c.orig	Wed Apr  2 19:41:48 1997
--- /sys/netinet/ip_output.c	Wed Apr  2 19:38:19 1997
***************
*** 67,72 ****
--- 67,76 ----
  #else
  #undef COMPAT_IPFW
  #endif
+ #if defined(IPFILTER_LKM) || defined(IPFILTER)
+ extern	int	(*fr_checkp) __P((struct ip *, int, struct ifnet *, int, struct mbuf **));
+ #endif
+ 
  
  u_short ip_id;
  
***************
*** 75,81 ****
  	__P((struct ifnet *, struct mbuf *, struct sockaddr_in *));
  static int	ip_getmoptions
  	__P((int, struct ip_moptions *, struct mbuf **));
! static int	ip_optcopy __P((struct ip *, struct ip *));
  static int	ip_pcbopts __P((struct mbuf **, struct mbuf *));
  static int	ip_setmoptions
  	__P((int, struct ip_moptions **, struct mbuf *));
--- 79,85 ----
  	__P((struct ifnet *, struct mbuf *, struct sockaddr_in *));
  static int	ip_getmoptions
  	__P((int, struct ip_moptions *, struct mbuf **));
! int	ip_optcopy __P((struct ip *, struct ip *));
  static int	ip_pcbopts __P((struct mbuf **, struct mbuf *));
  static int	ip_setmoptions
  	__P((int, struct ip_moptions **, struct mbuf *));
***************
*** 338,344 ****
--- 342,358 ----
  	 * - Wrap: fake packet's addr/port <unimpl.>
  	 * - Encapsulate: put it in another IP and send out. <unimp.>
  	 */ 
+ #if defined(IPFILTER_LKM) || defined(IPFILTER)
+ 	if (fr_checkp) {
+ 		struct mbuf *m1 = m;
  
+ 		if ((*fr_checkp)(ip, hlen, ifp, 1, &m1))
+ 			error = EHOSTUNREACH;
+ 		if (error || !m1)
+ 			goto done;
+ 		ip = mtod(m = m1, struct ip *);
+         }
+ #endif
  #ifdef COMPAT_IPFW
          if (ip_nat_ptr && !(*ip_nat_ptr)(&ip, &m, ifp, IP_NAT_OUT)) {
  		error = EACCES; 
***************
*** 559,565 ****
   * Copy options from ip to jp,
   * omitting those not copied during fragmentation.
   */
! static int
  ip_optcopy(ip, jp)
  	struct ip *ip, *jp;
  {
--- 573,579 ----
   * Copy options from ip to jp,
   * omitting those not copied during fragmentation.
   */
! int
  ip_optcopy(ip, jp)
  	struct ip *ip, *jp;
  {
