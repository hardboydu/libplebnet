#
# LINT -- config file for checking all the sources, tries to pull in
#	as much of the source tree as it can.
#
#	$Id: LINT,v 1.316 1997/03/12 19:11:59 se Exp $
#
# NB: You probably don't want to try running a kernel built from this
# file.  Instead, you should start from GENERIC, and add options from
# this file as required.
#

#
# This directive is mandatory; it defines the architecture to be
# configured for; in this case, the 386 family.  You must also specify
# at least one CPU (the one you intend to run on); deleting the
# specification for CPUs you don't need to use may make parts of the
# system run faster.  This is especially true removing I386_CPU.
#
machine		"i386"
cpu		"I386_CPU"
cpu		"I486_CPU"
cpu		"I586_CPU"		# aka Pentium(tm)
cpu		"I686_CPU"		# aka Pentium Pro(tm)

# 
# This is the ``identification'' of the kernel.  Usually this should
# be the same as the name of your kernel.
#
ident		LINT

#
# The `maxusers' parameter controls the static sizing of a number of
# internal system tables by a complicated formula defined in param.c.
#
maxusers	10

#
# Certain applications can grow to be larger than the 128M limit
# that FreeBSD initially imposes.  Below are some options to
# allow that limit to grow to 256MB, and can be increased further
# with changing the parameters.  MAXDSIZ is the maximum that the
# limit can be set to, and the DFLDSIZ is the default value for
# the limit.  You might want to set the default lower than the
# max, and explicitly set the maximum with a shell command for processes
# that regularly exceed the limit like INND.
#
options		"MAXDSIZ=(256*1024*1024)"
options		"DFLDSIZ=(256*1024*1024)"

#
# A math emulator is mandatory if you wish to run on hardware which
# does not have a floating-point processor.  Pick either the original,
# bogus (but freely-distributable) math emulator, or a much more
# fully-featured but GPL-licensed emulator taken from Linux.
#
options		MATH_EMULATE		#Support for x87 emulation
# Don't enable both of these in a real config.
options		GPL_MATH_EMULATE	#Support for x87 emulation via
					#new math emulator 

# When this is set, be extra conservative in various parts of the kernel
# and choose functionality over speed (on the widest variety of systems).
options		FAILSAFE

# This allows you to actually store this configuration file into
# the kernel binary itself, where it may be later read by saying:
#    strings /kernel | grep ^___ | sed -e 's/^___//' > MYKERNEL
#
options         INCLUDE_CONFIG_FILE     # Include this file in kernel

#
# This directive defines a number of things:
#  - The compiled kernel is to be called `kernel'
#  - The root filesystem might be on partition wd0a
#  - Crash dumps will be written to wd0b, if possible.  Specifying the
#    dump device here is not recommended.  Use dumpon(8).
#
config		kernel	root on wd0 dumps on wd0


#####################################################################
# COMPATIBILITY OPTIONS                                             

#
# Implement system calls compatible with 4.3BSD and older versions of
# FreeBSD.  You probably do NOT want to remove this as much current code
# still relies on the 4.3 emulation.
#
options		"COMPAT_43"

#
# Allow user-mode programs to manipulate their local descriptor tables.
# This option is required for the WINE Windows(tm) emulator, and is
# not used by anything else (that we know of).
#
options		USER_LDT		#allow user-level control of i386 ldt

#
# These three options provide support for System V Interface
# Definition-style interprocess communication, in the form of shared
# memory, semaphores, and message queues, respectively.
#
options		SYSVSHM
options		SYSVSEM
options		SYSVMSG

#
# This option includes a MD5 routine in the kernel, this is used for
# various authentication and privacy uses.
#
options		"MD5"


#####################################################################
# DEBUGGING OPTIONS

#
# Enable the kernel debugger.
#
options		DDB

#
# Don't drop into DDB for a panic. Intended for unattended operation
# where you may want to drop to DDB from the console, but still want
# the machine to recover from a panic
#
options		DDB_UNATTENDED

# 
# KTRACE enables the system-call tracing facility ktrace(2).
#
options		KTRACE			#kernel tracing

#
# The DIAGNOSTIC option is used in a number of source files to enable
# extra sanity checking of internal structures.  This support is not
# enabled by default because of the extra time it would take to check
# for these conditions, which can only occur as a result of
# programming errors.
#
options		DIAGNOSTIC

#
# PERFMON causes the driver for Pentium/Pentium Pro performance counters
# to be compiled.  See perfmon(4) for more information.
#
options		PERFMON

# XXX - this doesn't belong here.
# Allow ordinary users to take the console - this is useful for X.
options		UCONSOLE

# XXX - this doesn't belong here either
options		USERCONFIG		#boot -c editor
options		USERCONFIG_BOOT		#imply -c and parse info area
options		VISUAL_USERCONFIG	#visual boot -c editor

#####################################################################
# NETWORKING OPTIONS

#
# Protocol families:
#  Only the INET (Internet) family is officially supported in FreeBSD.
#  Source code for the NS (Xerox Network Service) is provided for amusement
#  value.
#
options		INET			#Internet communications protocols

options		IPX			#IPX/SPX communications protocols
options		IPXIP			#IPX in IP encapsulation (not available)
options		IPTUNNEL		#IP in IPX encapsulation (not available)
options		IPXPRINTFS=0		#IPX/SPX Console Debugging Information
options		IPX_ERRPRINTFS=0	#IPX/SPX Console Debugging Information

options		NETATALK		#Appletalk communications protocols

# These are currently broken but are shipped due to interest.
#options		NS			#Xerox NS protocols

# These are currently broken and are no longer shipped due to lack
# of interest.
#options		CCITT			#X.25 network layer
#options		ISO
#options		TPIP			#ISO TP class 4 over IP
#options		TPCONS			#ISO TP class 0 over X.25
#options		LLC			#X.25 link layer for Ethernets
#options		HDLC			#X.25 link layer for serial lines
#options		EON			#ISO CLNP over IP
#options		NSIP			#XNS over IP

#
# Network interfaces:
#  The `loop' pseudo-device is MANDATORY when networking is enabled.
#  The `ether' pseudo-device provides generic code to handle
#  Ethernets; it is MANDATORY when a Ethernet device driver is
#  configured.
#  The 'fddi' pseudo-device provides generic code to support FDDI.
#  The `sppp' pseudo-device serves a similar role for certain types
#  of synchronous PPP links (like `cx', `ar').
#  The `sl' pseudo-device implements the Serial Line IP (SLIP) service.
#  The `ppp' pseudo-device implements the Point-to-Point Protocol.
#  The `bpfilter' pseudo-device enables the Berkeley Packet Filter.  Be
#  aware of the legal and administrative consequences of enabling this
#  option.  The number of devices determines the maximum number of
#  simultaneous BPF clients programs runnable.
#  The `disc' pseudo-device implements a minimal network interface,
#  which throws away all packets sent and never receives any.  It is
#  included for testing purposes.
#  The `tun' pseudo-device implements the User Process PPP (iijppp)
#
pseudo-device	ether			#Generic Ethernet
pseudo-device	fddi			#Generic FDDI
pseudo-device	sppp			#Generic Synchronous PPP
pseudo-device	loop			#Network loopback device
pseudo-device	sl	2		#Serial Line IP
pseudo-device	ppp	2		#Point-to-point protocol
pseudo-device	bpfilter	4	#Berkeley packet filter
pseudo-device	disc			#Discard device
pseudo-device	tun	1		#Tunnel driver(user process ppp)

#
# Internet family options:
#
# TCP_COMPAT_42 causes the TCP code to emulate certain bugs present in
# 4.2BSD.  This option should not be used unless you have a 4.2BSD
# machine and TCP connections fail.
#
# MROUTING enables the kernel multicast packet forwarder, which works
# with mrouted(8).
#
# IPFIREWALL enables support for IP firewall construction, in
# conjunction with the `ipfw' program.  IPFIREWALL_VERBOSE sends
# logged packets to the system logger.  IPFIREWALL_VERBOSE_LIMIT
# limits the number of times a matching entry can be logged.
#
# IPDIVERT enables the divert IP sockets, used by ``ipfw divert''
#
# TCPDEBUG is undocumented.
#
options		"TCP_COMPAT_42"		#emulate 4.2BSD TCP bugs
options		MROUTING		# Multicast routing
options         IPFIREWALL              #firewall
options         IPFIREWALL_VERBOSE      #print information about
					# dropped packets
options		"IPFIREWALL_VERBOSE_LIMIT=100" #limit verbosity
options		IPDIVERT		#divert sockets
options		TCPDEBUG


#####################################################################
# FILESYSTEM OPTIONS

#
# Only the root, /usr, and /tmp filesystems need be statically
# compiled; everything else will be automatically loaded at mount
# time.  (Exception: the UFS family---FFS, MFS, and LFS---cannot
# currently be demand-loaded.)  Some people still prefer to statically
# compile other filesystems as well.
#
# NB: The LFS, PORTAL, and UNION filesystems are known to be buggy,
# and WILL panic your system if you attempt to do anything with them.
# They are included here as an incentive for some enterprising soul to
# sit down and fix them.
#
# Note: 4.4BSD NQNFS lease checking has relatively high cost for
# _local_ I/O as well as remote I/O. Don't use it unless you will
# using NQNFS.
#

# One of these is mandatory:
options		FFS			#Fast filesystem
options		NFS			#Network File System

# The rest are optional:
options		NQNFS			#Enable NQNFS lease checking
# options	NFS_NOSERVER		#Disable the NFS-server code.
options		"CD9660"		#ISO 9660 filesystem
options		FDESC			#File descriptor filesystem
options		KERNFS			#Kernel filesystem
options		LFS			#Log filesystem
options		MFS			#Memory File System
options		MSDOSFS			#MS DOS File System
options		NULLFS			#NULL filesystem
options		PORTAL			#Portal filesystem
options		PROCFS			#Process filesystem
options		UMAPFS			#UID map filesystem
options		UNION			#Union filesystem
# This DEVFS is experimental but seems to work
options		DEVFS			#devices filesystem

# Make space in the kernel for a MFS root filesystem.  Define to the number
# of kilobytes to reserve for the filesystem.
options		MFS_ROOT=10
# Allow the MFS_ROOT code to load the MFS image from floppy if it is missing.
options		MFS_AUTOLOAD

# Allow this many swap-devices.
options		NSWAPDEV=20

# Disk quotas are supported when this option is enabled.  If you
# change the value of this option, you must do a `make clean' in your
# kernel compile directory in order to get a working kernel.
#
options		QUOTA			#enable disk quotas

# Add more checking code to various filesystems
#options		NULLFS_DIAGNOSTIC
#options		KERNFS_DIAGNOSTIC
#options		UMAPFS_DIAGNOSTIC
#options		UNION_DIAGNOSTIC

# Add some error checking code to the null_bypass routine
# in nthe NULL filesystem
#options		SAFETY


#####################################################################
# SCSI DEVICES

# SCSI DEVICE CONFIGURATION

# The SCSI subsystem consists of the `base' SCSI code, a number of
# high-level SCSI device `type' drivers, and the low-level host-adapter
# device drivers.  The host adapters are listed in the ISA and PCI
# device configuration sections below.
#
# Beginning with FreeBSD 2.0.5 you can wire down your SCSI devices so
# that a given bus, target, and LUN always come on line as the same
# device unit.  In earlier versions the unit numbers were assigned
# in the order that the devices were probed on the SCSI bus.  This
# means that if you removed a disk drive, you may have had to rewrite
# your /etc/fstab file, and also that you had to be careful when adding
# a new disk as it may have been probed earlier and moved your device
# configuration around.

# This old behavior is maintained as the default behavior.  The unit
# assignment begins with the first non-wired down unit for a device
# type.  For example, if you wire a disk as "sd3" then the first
# non-wired disk will be assigned sd4.

# The syntax for wiring down devices is:

# controller	scbus0 at ahc0		# Single bus device
# controller	scbus1 at ahc1 bus 0	# Single bus device
# controller	scbus3 at ahc2 bus 0	# Twin bus device
# controller	scbus2 at ahc2 bus 1	# Twin bus device
# disk 		sd0 at scbus0 target 0 unit 0
# disk		sd1 at scbus3 target 1
# disk		sd2 at scbus2 target 3
# tape		st1 at scbus1 target 6
# device	cd0 at scbus?

# "units" (SCSI logical unit number) that are not specified are
# treated as if specified as LUN 0.

# All SCSI devices allocate as many units as are required.

# The "unknown" device (uk? in pre-2.0.5) is now part of the base SCSI
# configuration and doesn't have to be explicitly configured.

controller	scbus0	#base SCSI code
device		ch0	#SCSI media changers
device		sd0	#SCSI disks
device		st0	#SCSI tapes
device		cd0	#SCSI CD-ROMs
device		od0	#SCSI optical disk

# The previous devices (ch, sd, st, cd) are recognized by config.
# config doesn't (and shouldn't) know about these newer ones,
# so we have to specify that they are on a SCSI bus with the "at scbus?"
# clause.

device worm0 at scbus?	# SCSI worm
device pt0 at scbus?	# SCSI processor type
device sctarg0 at scbus? # SCSI target

# SCSI OPTIONS:

# SCSIDEBUG: When defined enables debugging macros
# NO_SCSI_SENSE: When defined disables sense descriptions (about 4k)
# SCSI_REPORT_GEOMETRY: Always report disk geometry at boot up instead
#                       of only when booting verbosely.
options		SCSIDEBUG
#options	NO_SCSI_SENSE
options		SCSI_REPORT_GEOMETRY

# Options for the `od' optical disk driver:
#
# If drive returns sense key as 0x02 with vendor specific additional
# sense code (ASC) and additional sense code qualifier (ASCQ), or
# illegal ASC and ASCQ. This cause an error (NOT READY) and retrying.
# To suppress this, use the following option.
#
options		OD_BOGUS_NOT_READY
#
# For an automatic spindown, try this.  Again, preferrably as an
# option in your config file.
# WARNING!  Use at your own risk.  Joerg's ancient SONY SMO drive
# groks it fine, while Shunsuke's Fujitsu chokes on it and times
# out.
#
options		OD_AUTO_TURNOFF



#####################################################################
# MISCELLANEOUS DEVICES AND OPTIONS

#
# Of these, only the `log' device is truly mandatory.  The `pty'
# device usually turns out to be ``effectively mandatory'', as it is
# required for `telnetd', `rlogind', `screen', `emacs', and `xterm',
# among others. 
# If you wish to run certain
# system utilities which are compressed by default (like /stand/sysinstall)
# then `gzip' becomes mandatory too.
#
pseudo-device	pty	16	#Pseudo ttys - can go as high as 256
pseudo-device	speaker		#Play IBM BASIC-style noises out your speaker
pseudo-device	log		#Kernel syslog interface (/dev/klog)
pseudo-device	gzip		#Exec gzipped a.out's
pseudo-device	vn		#Vnode driver (turns a file into a device)
pseudo-device	snp	3	#Snoop device - to look at pty/vty/etc..
pseudo-device	ccd	4	#Concatenated disk driver

# These are only for watching for bitrot in old tty code.
# broken
#pseudo-device	tb

# These are only for watching for bitrot in old SCSI code.
pseudo-device	su		#scsi user
pseudo-device	ssc		#super scsi


#####################################################################
# HARDWARE DEVICE CONFIGURATION

# ISA and EISA devices:
# EISA support is available for some device, so they can be auto-probed.
# Micro Channel is not supported at all.

#
# Mandatory ISA devices: isa, sc or vt, npx
#
controller	isa0

#
# Options for `isa':
#
# AUTO_EOI_1 enables the `automatic EOI' feature for the master 8259A
# interrupt controller.  This saves about 0.7-1.25 usec for each interrupt.
# This option breaks suspend/resume on some portables.
#
# AUTO_EOI_2 enables the `automatic EOI' feature for the slave 8259A
# interrupt controller.  This saves about 0.7-1.25 usec for each interrupt.
# Automatic EOI is documented not to work for for the slave with the
# original i8259A, but it works for some clones and some integrated
# versions.
#
# BOUNCE_BUFFERS provides support for ISA DMA on machines with more
# than 16 megabytes of memory.  It doesn't hurt on other machines.
# Some broken EISA and VLB hardware may need this, too.
#
# MAXMEM specifies the amount of RAM on the machine; if this is not
# specified, FreeBSD will read the amount of memory from the CMOS RAM,
# so the amount of memory will be limited to 64MB or 16MB depending on
# the BIOS.  The amount is in kilobytes, so for a machine with 128MB of
# RAM, it would be 131072 (128 * 1024).
#
# TUNE_1542 enables the automatic ISA bus speed selection for the
# Adaptec 1542 boards. Does not work for all boards, use it with caution.
#
# BROKEN_KEYBOARD_RESET disables the use of the keyboard controller to
# reset the CPU for reboot.  This is needed on some systems with broken
# keyboard controllers.
#
# PAS_JOYSTICK_ENABLE enables the gameport on the ProAudio Spectrum

options		"AUTO_EOI_1"
#options	"AUTO_EOI_2"
options		BOUNCE_BUFFERS
options		"MAXMEM=(128*1024)"
#options        "TUNE_1542"
#options	BROKEN_KEYBOARD_RESET
#options	PAS_JOYSTICK_ENABLE

# Enable this and PCVT_FREEBSD for pcvt vt220 compatible console driver
device		vt0	at isa? port "IO_KBD" tty irq 1 vector pcrint
options		PCVT_FREEBSD=210	# pcvt running on FreeBSD >= 2.0.5
options		XSERVER			# include code for XFree86
options		FAT_CURSOR		# start with block cursor
# This PCVT option is for keyboards such as those used on IBM ThinkPad laptops
options		PCVT_SCANSET=2 		# IBM keyboards are non-std

# The syscons console driver (sco color console compatible) - default.
device		sc0	at isa? port "IO_KBD" tty irq 1 vector scintr
options		MAXCONS=16		# number of virtual consoles
options		SLOW_VGA		# do byte-wide i/o's to TS and GDC regs

#
# `flags' for sc0:
#       0x01    Use a 'visual' bell
#       0x02    Use a 'blink' cursor
#       0x04    Use a 'block' cursor
#       0x08    Force detection of keyboard, else we always assume a keyboard
#       0x10    Old-style (XT) keyboard support, useful for older ThinkPads

#
# The Numeric Processing eXtension driver.  This should be configured if
# your machine has a math co-processor, unless the coprocessor is very
# buggy. If it is not configured then you *must* configure math emulation
# (see above).  If both npx0 and emulation are configured, then only npx0
# is used (provided it works).
device		npx0	at isa? port "IO_NPX" iosiz 0x0 flags 0x0 irq 13 vector npxintr

#
# `flags' for npx0:
#	0x01	don't use the npx registers to optimize bcopy
#	0x02	don't use the npx registers to optimize bzero
#	0x04	don't use the npx registers to optimize copyin or copyout.
# The npx registers are normally used to optimize copying and zeroing when
# all of the following conditions are satisfied:
#	"I586_CPU" is an option
#	the cpu is an i586 (perhaps not a Pentium)
#	the probe for npx0 succeeds
#	INT 16 exception handling works.
# Then copying and zeroing using the npx registers is normally 30-100% faster.
# The flags can be used to control cases where it doesn't work or is slower.
# Setting them at boot time using userconfig works right (the optimizations
# are not used until later in the bootstrap when npx0 is attached).
#

#
# `iosiz' for npx0:
# This can be used instead of the MAXMEM option to set the memory size.  If
# it is nonzero, then it overrides both the MAXMEM option and the memory
# size reported by the BIOS.  Setting it at boot time using userconfig takes
# effect on the next reboot after the change has been recorded in the kernel
# binary (the size is used early in the boot before userconfig has a chance
# to change it).
#

#
# Optional ISA and EISA devices:
#

#
# SCSI host adapters: `aha', `aic', `bt', `nca'
#
# aha: Adaptec 154x
# ahc: Adaptec 274x/284x/294x
# aic: Adaptec 152x and sound cards using the Adaptec AIC-6360 (slow!)
# bt: Most Buslogic controllers
# nca: ProAudioSpectrum cards using the NCR 5380 or Trantor T130
# uha: UltraStore 14F and 34F
# sea: Seagate ST01/02 8 bit controller (slow!)
# wds: Western Digital WD7000 controller (no scatter/gather!).
#
# Note that the order is important in order for Buslogic cards to be
# probed correctly.
#

controller	bt0	at isa? port "IO_BT0" bio irq ? vector bt_isa_intr
controller	aha0	at isa? port "IO_AHA0" bio irq ? drq 5 vector ahaintr
controller	uha0	at isa? port "IO_UHA0" bio irq ? drq 5 vector uhaintr

controller      aic0    at isa? port 0x340 bio irq 11 vector aicintr
controller	nca0	at isa? port 0x1f88 bio irq 10 vector ncaintr
controller	nca1	at isa? port 0x1f84
controller	nca2	at isa? port 0x1f8c
controller	nca3	at isa? port 0x1e88
controller	nca4	at isa? port 0x350 bio irq 5 vector ncaintr

controller	sea0	at isa? bio irq 5 iomem 0xdc000 iosiz 0x2000 vector seaintr
controller	wds0	at isa? port 0x350 bio irq 15 drq 6 vector wdsintr

#
# ST-506, ESDI, and IDE hard disks: `wdc' and `wd'
#
# NB: ``Enhanced IDE'' is NOT supported at this time.
#
# The flags fields are used to enable the multi-sector I/O and
# the 32BIT I/O modes.  The flags may be used in either the controller
# definition or in the individual disk definitions.  The controller
# definition is supported for the boot configuration stuff.
#
# Each drive has a 16 bit flags value defined:
#	The low 8 bits are the maximum value for the multi-sector I/O,
#	where 0xff defaults to the maximum that the drive can handle.
#	The high bit of the 16 bit flags (0x8000) allows probing for
#	32 bit transfers.
#
# The flags field for the drives can be specified in the controller
# specification with the low 16 bits for drive 0, and the high 16 bits
# for drive 1.
# e.g.:
#controller	wdc0	at isa? port "IO_WD1" bio irq 14 flags 0x00ff8004 vector wdintr
#
# specifies that drive 0 will be allowed to probe for 32 bit transfers and
# a maximum multi-sector transfer of 4 sectors, and drive 1 will not be
# allowed to probe for 32 bit transfers, but will allow multi-sector
# transfers up to the maximum that the drive supports.
#

#
controller	wdc0	at isa? port "IO_WD1" bio irq 14 vector wdintr
disk		wd0	at wdc0 drive 0
disk		wd1	at wdc0 drive 1
controller	wdc1	at isa? port "IO_WD2" bio irq 15 vector wdintr
disk		wd2	at wdc1 drive 0
disk		wd3	at wdc1 drive 1

#
# Options for `wdc':
#
# CMD640 enables serializing access to primary and secondary channel
# of the CMD640B IDE Chip. The serializing will only take place
# if this option is set *and* the chip is probed by the pci-system.
#
options         "CMD640"	#Enable work around for CMD640 h/w bug
#
# ATAPI enables the support for ATAPI-compatible IDE devices
#
options         ATAPI   #Enable ATAPI support for IDE bus
options		ATAPI_STATIC	#Don't do it as an LKM

# IDE CD-ROM driver - requires wdc controller and ATAPI option
device          wcd0

#
# Standard floppy disk controllers and floppy tapes: `fdc', `fd', and `ft'
#
controller	fdc0	at isa? port "IO_FD1" bio irq 6 drq 2 vector fdintr
#
# Activate this line instead of the fdc0 line above if you happen to
# have an Insight floppy tape.  Probing them proved to be dangerous
# for people with floppy disks only, so it's "hidden" behind a flag:
#controller fdc0 at isa? port "IO_FD1" bio flags 1 irq 6 drq 2 vector fdintr

disk		fd0	at fdc0 drive 0
disk		fd1	at fdc0 drive 1
tape		ft0	at fdc0 drive 2


#
# Options for `fd':
#
# FDSEEKWAIT selects a non-default head-settle time (i.e., the time to
# wait after a seek is performed).  The default value (1/32 s) is
# usually sufficient.  The units are inverse seconds, so a value of 16
# here means to wait 1/16th of a second; you should choose a power of
# two.
# XXX: this seems to be missing!
options	FDSEEKWAIT=16

#
# Other standard PC hardware: `lpt', `mse', `psm', `sio', etc.
#
# lpt: printer port
#	lpt specials:
#		port can be specified as ?, this will cause the driver to scan
#		the BIOS port list;
#		the irq and vector clauses may be omitted, this
#		will force the port into polling mode.
# mse: Logitech and ATI InPort bus mouse ports
# psm: PS/2 mouse port [note: conflicts with sc0/vt0, thus "conflicts" keywd]
# sio: serial ports (see sio(4))

device		lpt0	at isa? port? tty irq 7 vector lptintr
device		lpt1	at isa? port "IO_LPT3" tty irq 5 vector lptintr
device		mse0	at isa? port 0x23c tty irq 5 vector mseintr
device		psm0	at isa? port "IO_KBD" conflicts tty irq 12 vector psmintr
# Options for psm:
options		PSM_CHECKSYNC		#checks the header byte for sync.

device		sio0	at isa? port "IO_COM1" tty irq 4 vector siointr

# Options for sio:
options		COMCONSOLE		#prefer serial console to video console
options		COM_ESP			#code for Hayes ESP
options		COM_MULTIPORT		#code for some cards with shared IRQs
options		DSI_SOFT_MODEM		#code for DSI Softmodems
options		BREAK_TO_DEBUGGER	#a BREAK on a comconsole goes to 
					#DDB, if available.

#
# Network interfaces: `cx', `ed', `el', `ep', `ie', `is', `le', `lnc'
#
# ar: Arnet SYNC/570i hdlc sync 2/4 port V.35/X.21 serial driver (requires sppp)
# cx: Cronyx/Sigma multiport sync/async (with Cisco or PPP framing)
# ed: Western Digital and SMC 80xx; Novell NE1000 and NE2000; 3Com 3C503
# el: 3Com 3C501 (slow!)
# ep: 3Com 3C509 (buggy)
# fe: Fujitsu MB86960A/MB86965A Ethernet
# ie: AT&T StarLAN 10 and EN100; 3Com 3C507; unknown NI5210
# le: Digital Equipment EtherWorks 2 and EtherWorks 3 (DEPCA, DE100,
#     DE101, DE200, DE201, DE202, DE203, DE204, DE205, DE422)
# lnc: Lance/PCnet cards (Isolan, Novell NE2100, NE32-VL)
# sr: RISCom/N2 hdlc sync 1/2 port V.35/X.21 serial driver (requires sppp)
# ze: IBM/National Semiconductor PCMCIA ethernet controller.
# zp: 3Com PCMCIA Etherlink III (It does not require shared memory for
#     send/receive operation, but it needs 'iomem' to read/write the
#     attribute memory)
#

device ar0 at isa? port 0x300 net irq 10 iomem 0xd0000 vector arintr
device cx0 at isa? port 0x240 net irq 15 drq 7 vector cxintr
device ed0 at isa? port 0x280 net irq 5 iomem 0xd8000 vector edintr
device eg0 at isa? port 0x310 net irq 5 vector egintr
device el0 at isa? port 0x300 net irq 9 vector elintr
device ep0 at isa? port 0x300 net irq 10 vector epintr
device ex0 at isa? port? net irq? vector exintr
device fe0 at isa? port 0x300 net irq ? vector feintr
device ie0 at isa? port 0x360 net irq 7 iomem 0xd0000 vector ieintr
device ix0 at isa? port 0x300 net irq 10 iomem 0xd0000 iosiz 32768 vector ixintr
device le0 at isa? port 0x300 net irq 5 iomem 0xd0000 vector le_intr
device lnc0 at isa? port 0x300 net irq 10 drq 0 vector lncintr
device sr0 at isa? port 0x300 net irq 5 iomem 0xd0000 vector srintr
# Needed so that we can (bogusly) include both the dedicated PCCARD
# drivers and the generic support
options	LINT_PCCARD_HACK
device ze0 at isa? port 0x300 net irq 5 iomem 0xd8000 vector zeintr
device zp0 at isa? port 0x300 net irq 10 iomem 0xd8000 vector zpintr


#
# Audio drivers: `snd', `sb', `pas', `gus', `pca'
#
# snd: Voxware sound support code
# sb: SoundBlaster PCM - SoundBlaster, SB Pro, SB16, ProAudioSpectrum
# sbxvi: SoundBlaster 16
# sbmidi: SoundBlaster 16 MIDI interface
# pas: ProAudioSpectrum PCM and MIDI
# gus: Gravis Ultrasound - Ultrasound, Ultrasound 16, Ultrasound MAX
# gusxvi: Gravis Ultrasound 16-bit PCM	(do not use)
# mss: Microsoft Sound System
# opl: Yamaha OPL-2 and OPL-3 FM - SB, SB Pro, SB 16, ProAudioSpectrum
# uart: stand-alone 6850 UART for MIDI
# mpu: Roland MPU-401 stand-alone card
# 
# Beware!  The addresses specified below are also hard-coded in
# i386/isa/sound/sound_config.h.  If you change the values here, you
# must also change the values in the include file.
#
# pca: PCM audio through your PC speaker
#
# If you don't have a lpt0 device at IRQ 7, you can remove the
# ``conflicts'' specification in the appropriate device entries below.
#
# If you have a GUS-MAX card and want to use the CS4231 codec on the
# card the drqs for the gus max must be 8 bit (1, 2, or 3).
# 
# If you would like to use the full duplex option on the gus, then define
# flags to be the ``read dma channel''.
#
# options BROKEN_BUS_CLOCK	#PAS-16 isn't working and OPTI chipset
# options SYMPHONY_PAS		#PAS-16 isn't working and SYMPHONY chipset
# options EXCLUDE_SBPRO		#PAS-16
# options SBC_IRQ=5		#PAS-16. Must match irq on sb0 line.
# PAS16: The order of the pas0/sb0/opl0 is important since the
#	sb emulation is enabled in the pas-16 attach.
#
# The i386/isa/sound/sound.doc has more information.

# Controls all sound devices
controller	snd0
device pas0     at isa? port 0x388 irq 10 drq 6 vector pasintr
device sb0      at isa? port 0x220 irq 7 conflicts drq 1 vector sbintr
device sbxvi0   at isa? drq 5
device sbmidi0  at isa? port 0x330
#device awe0     at isa? port 0x620 
device gus0 at isa? port 0x220 irq 12 drq 1 vector gusintr
#device gus0 at isa? port 0x220 irq 12 drq 1 flags 0x3 vector gusintr
device mss0 at isa? port 0x530 irq 10 drq 1 vector adintr
# Use this line for PAS avoid port conflict
device opl0     at isa? port 0x38a
# For normal case use next line
# device opl0     at isa? port 0x388
device mpu0     at isa? port 0x330 irq 6 drq 0
device uart0 at isa? port 0x330 irq 5 vector "m6850intr"

# More undocumented sound devices with bogus configurations for linting.
# broken
#device sscape0  at isa? port 0x330 irq 6 drq 0
#device trix0    at isa? port 0x330 irq 6 drq 0 vector sscapeintr

# Not controlled by `snd'
device pca0 at isa? port IO_TIMER1 tty

#
# Miscellaneous hardware:
#
# mcd: Mitsumi CD-ROM
# scd: Sony CD-ROM
# matcd: Matsushita/Panasonic CD-ROM
# wt: Wangtek and Archive QIC-02/QIC-36 tape drives
# ctx: Cortex-I frame grabber
# apm: Laptop Advanced Power Management (experimental)
# spigot: The Creative Labs Video Spigot video-acquisition board
# meteor: Matrox Meteor video capture board
# cy: Cyclades serial driver
# dgb: Digiboard PC/Xi and PC/Xe series driver (ALPHA QUALITY!)
# gp:  National Instruments AT-GPIB and AT-GPIB/TNT board
# asc: GI1904-based hand scanners, e.g. the Trust Amiscan Grey
# gsc: Genius GS-4500 hand scanner.
# joy: joystick
# labpc: National Instrument's Lab-PC and Lab-PC+
# rc: RISCom/8 multiport card
# tw: TW-523 power line interface for use with X-10 home control products
# si: Specialix SI/XIO 4-32 port terminal multiplexor
# stl: Stallion EasyIO and EasyConnection 8/32 (cd1400 based)
# stli: Stallion EasyConnection 8/64, ONboard, Brumby (intelligent)

#
# Notes on APM
#  Some APM implementations will not work with the `statistics clock'
#  enabled, so it's disabled by default if the APM driver is enabled.
#  However, this is not true for all laptops.  Try removing the option
#  APM_BROKEN_STATCLOCK and see if suspend/resume work
#

options	APM_IDLE_CPU	# Tell APM to idle rather than halt'ing the cpu

#
# Notes on the spigot:
#  The video spigot is at 0xad6.  This port address can not be changed.
#  The irq values may only be 10, 11, or 15
#  I/O memory is an 8kb region.  Possible values are:
#    0a0000, 0a2000, ..., 0fffff, f00000, f02000, ..., ffffff
#    The start address must be on an even boundary.
#  Add the following option if you want to allow non-root users to be able
#  to access the spigot.  This option is not secure because it allows users
#  direct access to the I/O page. 
#  	options SPIGOT_UNSECURE
#

# Notes on the Digiboard driver:
#
# The following flag values have special meanings:
#	0x01 - alternate layout of pins
#	0x02 - use the windowed PC/Xe in 64K mode

# Notes on the Specialix SI/XIO driver:
#  **This is NOT a Specialix supported Driver!**
#  The host card is memory, not IO mapped.
#  The Rev 1 host cards use a 64K chunk, on a 32K boundary.
#  The Rev 2 host cards use a 32K chunk, on a 32K boundary.
#  The cards can use an IRQ of 11, 12 or 15.

# Notes on the Stallion stl and stli drivers:
#  See src/i386/isa/README.stl for complete instructions.
#  This is version 0.0.5alpha, unsupported by Stallion.
#  The stl driver has a secondary IO port hard coded at 0x280.  You need
#     to change src/i386/isa/stallion.c if you reconfigure this on the boards.
#  The "flags" and "iosiz" settings on the stli driver depend on the board:
#	EasyConnection 8/64 ISA:     flags 23         iosiz 0x1000
#	EasyConnection 8/64 EISA:    flags 24         iosiz 0x10000
#	EasyConnection 8/64 MCA:     flags 25         iosiz 0x1000
#	ONboard ISA:                 flags 4          iosiz 0x10000
#	ONboard EISA:                flags 7          iosiz 0x10000
#	ONboard MCA:                 flags 3          iosiz 0x10000
#	Brumby:                      flags 2          iosiz 0x4000
#	Stallion:                    flags 1          iosiz 0x10000

device		mcd0	at isa? port 0x300 bio irq 10 vector mcdintr
# for the Sony CDU31/33A CDROM
device		scd0	at isa? port 0x230 bio
# for the SoundBlaster 16 multicd - up to 4 devices
controller      matcd0  at isa? port 0x230 bio
device		wt0	at isa? port 0x300 bio irq 5 drq 1 vector wtintr
device		ctx0	at isa? port 0x230 iomem 0xd0000
device		spigot0 at isa? port 0xad6 irq 15 iomem 0xee000 vector spigintr
device		qcam0	at isa? port "IO_LPT3" tty
device		apm0	at isa?
options		APM_BROKEN_STATCLOCK
device		gp0	at isa? port 0x2c0 tty
device		gsc0	at isa? port "IO_GSC1" tty drq 3
device		joy0	at isa? port "IO_GAME"
device		cy0	at isa? tty irq 10 iomem 0xd4000 iosiz 0x2000 vector cyintr
device		dgb0	at isa? port 0x220 iomem 0xfc0000 iosiz ? tty
device		labpc0	at isa? port 0x260 tty irq 5 vector labpcintr
device          rc0     at isa? port 0x220 tty irq 12 vector rcintr
# the port and irq for tw0 are fictitious
device          tw0     at isa? port 0x380 tty irq 11 vector twintr
device		si0	at isa? iomem 0xd0000 tty irq 12 vector siintr
device		asc0	at isa? port IO_ASC1 tty drq 3 irq 10 vector ascintr
device		bqu0	at isa? port 0x150
device		stl0	at isa? port 0x2a0 tty irq 10 vector stlintr
device		stli0	at isa? port 0x2a0 tty iomem 0xcc000 flags 23 iosiz 0x1000

#
# EISA devices:
#
# The EISA bus device is eisa0.  It provides auto-detection and
# configuration support for all devices on the EISA bus.
#
# The `ahb' device provides support for the Adaptec 174X adapter.
#
# The `ahc' device provides support for the Adaptec 274X and 284X
# adapters.  The 284X, although a VLB card responds to EISA probes.
#
# fea: DEC DEFEA EISA FDDI adapter
#
controller	eisa0
controller	ahb0
controller	ahc0
device		fea0

# enable tagged command queueing, which is a major performance win on
# devices that support it (and controllers with enough SCB's)
options	AHC_TAGENABLE

# enable SCB paging - See the ahc.4 man page
options	AHC_SCBPAGING_ENABLE

# The aic7xxx driver will attempt to use memory mapped I/O for all PCI
# controllers that have it configured only if this option is set. Unfortunately,
# this doesn't work on some motherboards, which prevents it from being the
# default.
options AHC_ALLOW_MEMIO

# By default, only 10 EISA slots are probed, since the slot numbers
# above clash with the configuration address space of the PCI subsystem,
# and the EISA probe is not very smart about this.  This is sufficient
# for most machines, but in particular the HP NetServer LC series comes
# with an onboard AIC7770 dual-channel SCSI controller on EISA slot #11,
# thus you need to bump this figure to 12 for them.
options	"EISA_SLOTS=12"

#
# PCI devices:
#
# The main PCI bus device is `pci'.  It provides auto-detection and
# configuration support for all devices on the PCI bus, using either
# configuration mode defined in the PCI specification.
#
# The `ahc' device provides support for the Adaptec 29/3940(U)(W)
# and motherboard based AIC7870/AIC7880 adapters.
#
# The `ncr' device provides support for the NCR 53C810 and 53C825
# self-contained SCSI host adapters.
#
# The `amd' device provides support for the Tekram DC-390 and 390T
# SCSI host adapters, but is expected to work with any AMD 53c974
# PCI SCSI chip and the AMD Ethernet+SCSI Combo chip, after some
# local patches were applied to the sources (that had originally
# been written by Tekram and limited to work with their SCSI cards).
#
# The `de' device provides support for the Digital Equipment DC21040
# self-contained Ethernet adapter.
#
# The `fxp' device provides support for the Intel EtherExpress Pro/100B
# PCI Fast Ethernet adapters.
#
# The `vx' device provides support for the 3Com 3C590 and 3C595
# early support
#
# The `fpa' device provides support for the Digital DEFPA PCI FDDI
# adapter. pseudo-device fddi is also needed.
#
# The `meteor' device is a PCI video capture board. It can also have the
# following options:
#   options METEOR_ALLOC_PAGES=xxx	preallocate kernel pages for data entry
#	figure (ROWS*COLUMN*BYTES_PER_PIXEL*FRAME+PAGE_SIZE-1)/PAGE_SIZE
#   options METEOR_DEALLOC_PAGES	remove all allocated pages on close(2)
#   options METEOR_DEALLOC_ABOVE=xxx	remove all allocated pages above the
#	specified amount. If this value is below the allocated amount no action
#	taken
#   option METEOR_SYSTEM_DEFAULT={METEOR_PAL|METEOR_NTSC|METEOR_SECAM}, used
#	for initialization of fps routine when a signal is not present.
#
controller	pci0
controller	ahc1
controller	ncr0
controller	amd0
device		de0
device		fxp0
device		vx0
device		fpa0
device		meteor0


#
# PCCARD/PCMCIA
#
# crd: slot controller
# pcic: slots
controller	crd0
controller	pcic0 at crd?
controller	pcic1 at crd?

#
# Laptop/Notebook options:
#
# See also:
#  apm under `Miscellaneous hardware'
# above.

# For older notebooks that signal a powerfail condition (external
# power supply dropped, or battery state low) by issuing an NMI:

options		POWERFAIL_NMI	# make it beep instead of panicing

#
# An obsolete option to test kern_opt.c.
#
options		GATEWAY

# More undocumented options for linting.

options		CLK_CALIBRATION_LOOP
options		"CLK_USE_I8254_CALIBRATION"
options		"CLK_USE_I586_CALIBRATION"
options		COMPAT_LINUX
options		DEBUG
options		DEVFS_ROOT
options		"EXT2FS"
options		"I586_CTR_GUPROF"
options		"I586_PMC_GUPROF=0x70000"
options		"IBCS2"
options		LOCKF_DEBUG
options		KBD_MAXRETRY=4
options		KBD_MAXWAIT=6
options		KBD_RESETDELAY=201
options		KBDIO_DEBUG=2
options		MSGMNB=2049
options		MSGMNI=41
options		MSGSEG=2049
options		MSGSSZ=16
options		MSGTQL=41
options		NBUF=512
options		NMBCLUSTERS=1024
options		PSM_ACCEL=1
options		PSM_DEBUG=1
options		PSM_EMULATION
options		"SCSI_2_DEF"
options		SCSI_DELAY=8	# Be pessimistic about Joe SCSI device
options		SCSI_NCR_DEBUG
options		SCSI_NCR_DFLT_TAGS=4
options		SCSI_NCR_MAX_SYNC=10000
options		SCSI_NCR_MAX_WIDE=1
options		SCSI_NCR_MYADDR=7
options		SEMMAP=31
options		SEMMNI=11
options		SEMMNS=61
options		SEMMNU=31
options		SEMMSL=61
options		SEMOPM=101
options		SEMUME=11
options		SHOW_BUSYBUFS	# List buffers that prevent root unmount
options		SHMALL=1025
options		"SHMMAX=(SHMMAXPGS*PAGE_SIZE+1)"
options		SHMMAXPGS=1025
options		SHMMIN=2
options		SHMMNI=33
options		SHMSEG=9
options		SI_DEBUG
options		SIMPLELOCK_DEBUG
options		SPX_HACK
