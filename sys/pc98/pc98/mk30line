#!/usr/bin/perl
# 
# Copyright (c) KATO Takenori, 1994-1995. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer as
#    the first lines of this file unmodified.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 

# Default
($HS, $VS, $HBP, $HFP, $VBP, $VFP) = (7, 8, 7, 9, 25, 7);

# set module name
print("Enter module file name: ");
$module = <STDIN>;
open(MODULE, "<$module") || die "Can't open $module.\n";

# read module file
while (<MODULE>) {
    if (/\t\tdb\t255/) {
	($HS, $VS, $HBP, $HFP, $VBP, $VFP) =
	    /^\t\tdb\t255, (\d+)\+1,(\d+), (\d+)\+1,(\d+)\+1, (\d+),(\d+).*/;
	    }
}
close(MODULE);

print("Enter number of lines: ");
$ROW = <STDIN>;

# open /sys/pc98/pc98/module.h
open(MODULE_H, ">/sys/pc98/pc98/module.h") || die "Can't open module.h\n";

# write
printf(MODULE_H "#define\tLINE30_ROW\t%d\n", $ROW);
printf(MODULE_H "#define\t_HS\t%d + 1\n", $HS);
printf(MODULE_H "#define\t_VS\t%d\n", $VS);
printf(MODULE_H "#define\t_HFP\t%d + 1\n", $HFP);
printf(MODULE_H "#define\t_HBP\t%d + 1\n", $HBP);
printf(MODULE_H "#define\t_VFP\t%d\n", $VFP);
printf(MODULE_H "#define\t_VBP\t%d\n", $VBP);
close(MODULE_H);

