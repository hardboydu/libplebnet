.\"
.\" FreeBSD install - a package for the installation and maintainance
.\" of non-core utilities.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" Jordan K. Hubbard
.\"
.\"
.\"     @(#)pkg_delete.1
.\"
.TH pkg_delete 1 "July 18, 1993" "" "FreeBSD"

.SH NAME
pkg_delete - a utility for deleting previously installed software package distributions.
.SH SYNOPSIS
.na
.B pkg_delete
.RB [options]
.RB "pkg-name\ [.. pkg-name]"

.SH DESCRIPTION
The
.B pkg_delete
command is used to delete packages that have been previously installed
with the
.B pkg_add
command.

.SH OPTIONS
.TP
The following command line options are supported.
.TP
.B \-v
Turns on verbose output.
.B "Optional."
.TP
.B \-D
If an de-installation script exists for a given package, do not execute it.
.B "Optional."
.TP
.B \-n
Don't actually de-install a package, just report the steps that
would be taken if it was.
.B "Optional."
.TP
.BI "\-p\ " prefix
Sets
.I prefix
as the directory in which to delete files from any installed packages
which do not explicitly set theirs.
.B "Optional."
.PP
.SH "TECHNICAL DETAILS"
.B
pkg_delete
does pretty much what it says.  It looks for a package in /var/db/pkg
and sets about deleting the files that make up the package and, finally,
the record of the package itself.
.PP
If the package contains a
.B require
file (see 
.B pkg_create
), then this is executed first with the flags
.PP
.B <script>
.I pkg-name DEINSTALL
.PP
to see whether or not de-installation should continue (a non-zero exit
status means no).
.PP
If a
.B de-install
script exists for the package, it is executed before any files are removed.
It is this script's responsibility to clean up any additional messy details
around the package's installation, since all
.B pkg_delete
knows how to do is delete the files created in the original distribution.
The
.B de-install
script is called with the flags
.PP
.B <script>
.I pkg-name DEINSTALL
.PP
Where
.I pkg-name
is the name of the package in question and
.I DEINSTALL
is a keyword denoting that this is a deinstallation.  Passing the keyword
lets you potentially write only one program/script that handles all
aspects of installation and deletion.
.PP
All scripts are called with the environment variable
.B PKG_PREFIX
set to the installation prefix (see the
.B -p
option above).  This allows a package author to write a script
that reliably performs some action on the directory where the package
is installed, even if the user might have changed it by
.B -p
when
.B pkg_add
or
.B pkg_delete
is run.
.PP
.SH BUGS
Sure to be some.
.SH "SEE ALSO"
.BR pkg_create "(" 1 "),"
.BR pkg_info "(" 1 "),"
.BR pkg_add "(" 1 "),"
.SH AUTHORS
Jordan Hubbard

